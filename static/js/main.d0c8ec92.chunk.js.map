{"version":3,"sources":["localization/ja_jp sync //.json$","localization/en_us sync //.json$","localization/zh_tw sync //.json$","db sync /^/.//.*/.json$","db sync /^/.//.*//detail/.json$","library/common.ts","component/relation/graph.tsx","component/relation/query.tsx","component/course-data.tsx","component/simulator/horse-proper-rate.tsx","component/simulator/horse-stat-data.tsx","library/race/common.tsx","component/simulator/horse-data.tsx","component/simulator/race-data.tsx","library/race/constant.ts","library/race/race-horse.ts","component/simulator/race-result.tsx","library/race/horse.ts","library/race/course.ts","component/simulator/simulator-calculator.tsx","component/simulator/skill-selector.tsx","component/simulator/simulator.tsx","component/course/course-chart.tsx","component/course/course.tsx","data-context.tsx","component/skill/skill-item.tsx","component/skill/index.tsx","localization.ts","app.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","RunningStyle","DistanceType","GroundType","TurnType","InoutType","CoursePhase","GroundStatus","ProperRate","SkillConditionOperatorsLogical","SkillConditionOperatorsFormula","characters","characterJson","relations","relationJson","relationMembers","relationMemberJson","RelationGraph","props","characterIds","i","length","j","calculateRelation","this","idToPortrait","_","targetId","localization","className","src","process","alt","character","name","createRow","id1","id2","targetRelations","intersection","reduce","sum","parseInt","Component","RelationQuery","horses","selectHorse","event","value","target","setState","horseId","state","rel","forEach","targetHorseId","push","relation","image","sortBy","horseRow","relationArray","buildRelationArray","FormControl","InputLabel","Select","labelId","onChange","MenuItem","undefined","Common","time","hour","Math","floor","hourString","minute","minuteString","toString","padStart","second","secondString","minorString","Option","CourseData","setData","racecourse","span","site","Racecourse","course","key","courseCategories","ground","Ground","distance","Distance","racecourseComponent","getRacecourseComponent","groundComponent","getGroundComponent","distanceComponent","getDistanceComponent","gutter","HorseProperRate","properRateTypes","properTypes","properName","properRateType","camelProperRateType","camelCase","properRate","G","F","E","D","C","B","A","S","HorseStatData","stats","min","max","data","speed","stamina","pow","guts","wiz","ResultFlag","HorseData","RaceData","strategy","Strategy","Nige","RunningStyleNige","Senko","RunningStyleSenko","Sashi","RunningStyleSashi","Oikomi","RunningStyleOikomi","groundStatus","Good","GroundStatusGood","SlightlyHeavy","GroundStatusSlightlyHeavy","Heavy","GroundStatusHeavy","Bad","GroundStatusBad","strategyComponent","getStrategyComponent","groundStatusComponent","getGroundStatusComponent","constant","baseDistance","minSpeed","minSpeedRate","minSpeedGutsCoefSqrt","minSpeedGutsCoef","startDash","targetSpeedCoefficient","startAccelAdd","targetSpeed","baseTargetSpeedRandomMinusVal1","baseTargetSpeedRandomMinusVal2","baseTargetSpeedRandomPlusVal1","baseTargetSpeedRandomLogCoefficient","baseTargetSpeedRandomCoefficient","Start","Middle","End","LastSpurt","phaseEndBaseTargetSpeedCoef","addSpeedParamCoef","baseTargetSpeedCoef","lastSpurtBaseTargetSpeedAddCoef","lastSpurtTargetSpeedCoefSqrt","upSlopeAddSpeedVal1","downSlopeAddSpeedVal1","downSlopeAddSpeedVal2","firstBlockSlowStyles","lastSpurtTargetSpeedStep","accel","accelPhaseCoef","accelPowCoef","accelPowCoefUpSlope","accelPowCoefSqrt","accelDecreaseCoef","accelDecreaseZeroHpCoef","hp","hpInitialVal1","hpMaxCoef","hpDecBase","hpDecRateBaseNormal","hpDecRateBaseTemptation","hpDecRateBasePositionKeepPaseDown","hpDecRateMultiplyDownSlopeAccelMode","speedGapParam1","speedGapParam1Pow","groundModifierMultiHpSub","Turf","Dirt","hpGutsBase","hpGutsCoef","hpGutsCoefSqrt","distanceTargetSpeedCoefficient","blockPortion","distanceShort","distanceMile","distanceMiddle","distanceLong","Number","MAX_VALUE","startSpeed","phaseStart","phaseMiddle","phaseEnd","positionSense","frameTime","gateTimeRange","finishTimeCoef","lastSpurt","determineRateBase","determineRateWizMultiplier","targetDistanceFromGoal","slope","downSlopeAccelModeChanceBase","downSlopeEndChance","BreakPoint","Mode","RaceResult","raceResults","timeAverage","meanBy","timeShown","parseFloat","finish_time_min","secondToTime","TimeMin","timeDeviationSum","fullLastSpurtCount","hpLeftSum","result","resultFlags","has","FullLastSpurt","hpLeft","TimeAverage","TimeStandardDeviation","TimeShown","FullLastSpurtRate","HpLeftAverage","toFixed","sqrt","toLocaleString","style","Horse","stat","Course","courseData","_courseData","getDistanceType","turn","slope_per","Short","Mile","Long","distanceProperRate","distanceProperRateJson","groundProperRate","groundProperRateJson","RaceHorse","horse","runningStyle","_course","_horse","_runningStyle","_speedWizRandomRange","_speedWizRandom","_phase","_mode","Set","_speed","_lastSpurtTargetSpeed","_hp","_distance","_time","_breakPoints","_startDashTargetSpeed","_slopePer","resultFlag","finishFirstBlock","delete","FirstBlock","FinishPhaseStart","phaseStartDistance","finishBlock","refreshSpeedRandomValue","FinishBlock","blockDistance","finishPhaseStart","FinishPhaseMiddle","phaseMiddleDistance","calculateLastSpurt","add","maxLastSpurtTargetSpeed","calculateAccelAndRun","hpCost","finalSpeed","lastSpurtDistance","lastSpurtTargetSpeed","lastSpurtSpeedCandidates","phaseEndBaseTargetSpeed","baseTargetSpeed","phaseEndTargetSpeedAddition","maxDistance","hpDecreaseRate","accelToTargetSpeed","currentSpeed","phaseEndAccelTime","phaseEndAccelDistance","phaseEndAccelHpCost","phaseEndFinalSpeed","lastSpurtAccelTime","lastSpurtAccelDistance","lastSpurtAccelHpCost","runDistance","phaseEndRunTime","phaseEndRunHpCost","getRunHpDecrease","lastSpurtRunTime","lastSpurtRunHpCost","hpDiff","candidate","randomByCandidates","lastSpurtDetermineRate","finishPhaseMiddle","FinishPhaseEnd","phaseEndDistance","finishPhaseEnd","FinishPhaseLastSpurt","doLastSpurt","finishLastSpurt","triggerPositionSense","zeroHp","ZeroHp","changeSlope","slopePer","checkDownSlopeAccelMode","DownSlopeAccel","DownSlopeAccelMode","random","triggerSkill","reachGoal","breakPointMap","None","FinishFirstBlock","PositionSense","Slope","Skill","Goal","upperBound","log10","lowerBound","distanceType","StartDash","startDashTargetSpeed","slopeAdd","abs","baseTargetSpeedRandom","realTargetSpeed","groundType","power","baseAccel","UpSlope","Temptation","PositionKeepPaceDown","phaseEndHpDecreaseRate","modeHpDecreaseRate","minParameters","minKey","minDistance","entries","targetValue","Array","isArray","parameters","breakPoint","accelTime","accelDistance","accelHpCost","runTime","speedCoefficient","realAccelTime","nr","realAccelDistance","speedHpDecreaseRate","getSpeedHpDecrease","runHpCost","realRunTime","realRunDistance","slopePers","allSlopePers","addBreakPoint","type","pop","maxHp","buildSlopeBreakPoints","doGateOpen","debugOutput","finishStartDash","minBreakpoint","doAccelAndRun","removeBreakPoint","initialSpeed","targetSpeedByDistanceSquare","getAccelHpDecrease","determineRate","randomNumber","log","SimulatorCalculator","calculate","a","running","finished","groundTypeTurf","groundTypeDirt","distanceTypeShort","distanceTypeMile","distanceTypeMiddle","distanceTypeLong","runningStyleNige","runningStyleSenko","runningStyleSashi","runningStyleOikomi","rounds","targetCourse","targetHorse","counter","started","worksPerThread","ceil","concurrency","Promise","raceHorse","simulate","skills","normal","rare","unique","temptation","triggered","delay","progressPercent","round","SimulatorCalculateRounds","disabled","onClick","SimulatorCalculate","percent","SKILL_SELECTOR_HIERARCHY","categoryName","sets","children","icon","TreeNode","TreeSelect","skillData","skillJson","SkillSelector","_skillSets","skill","icon_id","rarity","definitions","definition","title","buildSkillTreeNodes","chain","set","filter","skillSet","flatten","Speed","dropdownPopupAlign","overflow","adjustY","adjustX","offset","treeLine","allowClear","multiple","autoClearSearchValue","showCheckedStrategy","SHOW_PARENT","width","courses","courseJson","Simulator","updateCourse","loadCourseData","race_track_id","CORNER_COLOR","Default","stroke","strokeOpacity","fill","fillOpacity","1","2","3","4","CourseChart","slopeDistance","lastSlopePer","lastSlopePerDistance","referenceAreas","param","corner","index","corner_index","includes","indexOf","ReferenceArea","x1","start","x2","end","label","Label","position","ComposedChart","height","XAxis","dataKey","YAxis","domain","Tooltip","Legend","Line","dot","CourseSlope","ReferenceLine","x","CoursePositionKeep","CourseEnd","CourseMiddlePhase","CourseEndPhase","DataContext","createContext","initData","SkillItem","propSkill","useState","description","need_skill_point","grade_value","Skills","useContext","detail","overview","general","phase","filterButton","objects","tmp","checked","Localization","default","localizer","getLocalizationJaJp","getLocalizationEnUs","getLocalizationZhTw","getLocalization","locale","files","fileJson","fileKey","structure","split","merge","require","Header","Layout","Content","Footer","App","dataType","fileName","availableData","console","d","changeLocalization","theme","mode","defaultSelectedKeys","Item","to","exact","path","render","Provider","padding","href","defaultValue","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0c8ec92.chunk.js","sourcesContent":["var map = {\n\t\"./character/name.json\": 451,\n\t\"./course/ground.json\": 452,\n\t\"./course/inout.json\": 453,\n\t\"./course/racecourse.json\": 454,\n\t\"./site.json\": 455\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 450;","var map = {\n\t\"./character/name.json\": 457,\n\t\"./course/racecourse.json\": 458,\n\t\"./site.json\": 459\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 456;","var map = {\n\t\"./character/name.json\": 461,\n\t\"./course/racecourse.json\": 462,\n\t\"./site.json\": 463\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 460;","var map = {\n\t\"./character.json\": 144,\n\t\"./course.json\": 147,\n\t\"./proper_rate/distance.json\": 214,\n\t\"./proper_rate/ground.json\": 215,\n\t\"./proper_rate/running_style.json\": 216,\n\t\"./relation.json\": 145,\n\t\"./relation_member.json\": 146,\n\t\"./skill.json\": 217,\n\t\"./skill/detail.json\": 264,\n\t\"./skill/overview/general.json\": 465,\n\t\"./skill/skill_tag.json\": 466\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 464;","var map = {\n\t\"./skill/detail.json\": 264\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 467;","export interface LocalizationData {\n  character: {\n    name: LocalizationMap,\n  },\n  course: {\n    racecourse: LocalizationMap,\n    ground: LocalizationMap,\n    inout: LocalizationMap,\n  },\n  site: LocalizationMap,\n  [key: string]: string | LocalizationSubData,\n}\n\nexport interface LocalizationSubData {\n  [key: string]: string | LocalizationSubData,\n}\n\ninterface LocalizationMap {\n  [key: string]: string,\n}\n\nexport enum RunningStyle {\n  Nige = 'RunningStyleNige',\n  Senko = 'RunningStyleSenko',\n  Sashi = 'RunningStyleSashi',\n  Oikomi = 'RunningStyleOikomi',\n}\n\nexport enum DistanceType {\n  Short = 'DistanceTypeShort',\n  Mile = 'DistanceTypeMile',\n  Middle = 'DistanceTypeMiddle',\n  Long = 'DistanceTypeLong',\n}\n\nexport enum GroundType {\n  Turf = '1',\n  Dirt = '2',\n}\n\nexport enum TurnType {\n  Right = '1',\n  Left = '2',\n  Straight = '4',\n}\n\nexport enum InoutType {\n  Normal = '1',\n  Inner = '2',\n  Outer = '3',\n  OuterInner = '4',\n}\n\nexport enum CoursePhase {\n  Start = 0,\n  Middle = 1,\n  End = 2,\n  LastSpurt = 3,\n}\n\nexport enum GroundStatus {\n  Good = 'GroundStatusGood',\n  SlightlyHeavy = 'GroundStatusSlightlyHeavy',\n  Heavy = 'GroundStatusHeavy',\n  Bad = 'GroundStatusBad',\n}\n\nexport enum ProperRate {\n  G = '1',\n  F = '2',\n  E = '3',\n  D = '4',\n  C = '5',\n  B = '6',\n  A = '7',\n  S = '8',\n}\n\nexport interface CourseCategory {\n  [key: string]: {\n    [key: string]: {\n      [key: string]: CourseDataType,\n    },\n  },\n}\n\nexport interface CourseDataType {\n  id: string,\n  race_track_id: string,\n  distance: number,\n  ground: GroundType,\n  turn: TurnType,\n  inout: InoutType,\n  course_set_status_id: string,\n  finish_time_min: string,\n  finish_time_min_random_range: string,\n  finish_time_max: string,\n  finish_time_max_random_range: string,\n  param: {\n    corner: { start?: number, end?: number }[],\n    straight: { start: number, end: number }[],\n    corner_index: number[],\n  },\n  slope_per: { distance: number, slope_per: number }[],\n}\n\nexport interface SkillData {\n  name: string,\n  need_skill_point: number | null,\n  description: string,\n  id: string,\n  rarity: number,\n  grade_value: number,\n  group_id: string,\n  group_rate: number,\n  filter_switch: number,\n  skill_category: number,\n  tag_id: string,\n  unique_skill_id_1: string,\n  unique_skill_id_2: string,\n  exp_type: number,\n  potential_per_default: number,\n  activate_lot: number,\n  condition_1: string,\n  float_ability_time_1: number,\n  float_cooldown_time_1: number,\n  ability_type_1_1: number,\n  ability_value_usage_1_1: number,\n  ability_value_level_usage_1_1: number,\n  float_ability_value_1_1: number,\n  target_type_1_1: number,\n  target_value_1_1: number,\n  ability_type_1_2: number,\n  ability_value_usage_1_2: number,\n  ability_value_level_usage_1_2: number,\n  float_ability_value_1_2: number,\n  target_type_1_2: number,\n  target_value_1_2: number,\n  ability_type_1_3: number,\n  ability_value_usage_1_3: number,\n  ability_value_level_usage_1_3: number,\n  float_ability_value_1_3: number,\n  target_type_1_3: number,\n  target_value_1_3: number,\n  condition_2: string,\n  float_ability_time_2: number,\n  float_cooldown_time_2: number,\n  ability_type_2_1: number,\n  ability_value_usage_2_1: number,\n  ability_value_level_usage_2_1: number,\n  float_ability_value_2_1: number,\n  target_type_2_1: number,\n  target_value_2_1: number,\n  ability_type_2_2: number,\n  ability_value_usage_2_2: number,\n  ability_value_level_usage_2_2: number,\n  float_ability_value_2_2:number,\n  target_type_2_2: number,\n  target_value_2_2: number,\n  ability_type_2_3: number,\n  ability_value_usage_2_3: number,\n  ability_value_level_usage_2_3: number,\n  float_ability_value_2_3: number,\n  target_type_2_3: number,\n  target_value_2_3: number,\n  popularity_add_param_1: number,\n  popularity_add_value_1: number,\n  popularity_add_param_2: number,\n  popularity_add_value_2: number,\n  disp_order: number,\n  icon_id: string,\n  condition_1_object: SkillConditionObject,\n  condition_2_object: SkillConditionObject,\n}\n\nenum SkillConditionOperatorsLogical {\n  And = 'and',\n  Or = 'or',\n}\n\nenum SkillConditionOperatorsFormula {\n  GreaterThan = '>',\n  GreaterThanOrEqualTo = '>=',\n  LessThan = '<',\n  LessThanOrEqualTo = '<=',\n  EqualTo = '==',\n  NotEqualTo = '!=',\n}\n\ninterface SkillConditionObjectLogical {\n  operator: SkillConditionOperatorsLogical,\n  items: SkillConditionObject[],\n}\n\ninterface SkillConditionObjectFormula {\n  operator: SkillConditionOperatorsFormula,\n  key: string,\n  value: string,\n}\n\ntype SkillConditionObject = SkillConditionObjectLogical | SkillConditionObjectFormula | {};\n\nclass Common {\n  static secondToTime(time: number): string {\n    const hour = Math.floor(time / 3600);\n    const hourString = hour > 0 ? `${hour}:` : '';\n    const minute = Math.floor((time - hour * 3600) / 60);\n    const minuteString = minute > 0\n      ? `${hour > 0 ? `${minute.toString().padStart(2, '0')}` : minute}:`\n      : '';\n    const second = Math.floor(time - hour * 3600 - minute * 60);\n    const secondString = second > 0\n      ? `${(hour > 0 || minute > 0) ? `${second.toString().padStart(2, '0')}` : second}`\n      : '0';\n    const minorString = `.${Math.floor((time - hour * 3600 - minute * 60 - second) * 1000).toString().padStart(3, '0')}`;\n    return `${hourString}${minuteString}${secondString}${minorString}`;\n  }\n}\n\nexport default Common;\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport 'react-tabs/style/react-tabs.css';\n\nimport '../../app.css';\nimport './relation.css';\n\nimport { LocalizationData } from '../../library/common';\nimport characterJson from '../../db/character.json';\nimport relationJson from '../../db/relation.json';\nimport relationMemberJson from '../../db/relation_member.json';\n\nconst characters = characterJson as { [key: string]: {} };\nconst relations = relationJson as { [key: string]: string };\nconst relationMembers = relationMemberJson as { [key: string]: string[] };\n\ninterface IProps {\n  localization: LocalizationData\n}\n\ninterface IState {\n}\n\nclass RelationGraph extends Component<IProps, IState> {\n  static calculateRelation(id1: string, id2: string) {\n    if (id1 === id2) {\n      return 0;\n    }\n    const targetRelations: string[] = _.intersection(relationMembers[id1], relationMembers[id2]);\n    return _.reduce(targetRelations, (sum: number, id: string) => sum + parseInt(relations[id], 10), 0);\n  }\n\n  characterIds: string[];\n\n  relations: { [key: string]: { [key: string]: number } };\n\n  constructor(props: IProps) {\n    super(props);\n    this.characterIds = Object.keys(characters);\n    this.relations = {};\n    for (let i = 0; i < this.characterIds.length; i += 1) {\n      this.relations[this.characterIds[i]] = {};\n      for (let j = 0; j < this.characterIds.length; j += 1) {\n        this.relations[this.characterIds[i]][this.characterIds[j]] = RelationGraph.calculateRelation(this.characterIds[i], this.characterIds[j]);\n      }\n    }\n  }\n\n  createRow(id: string) {\n    return (\n      <tr key={`relation_row_${id}`}>\n        <th key={`portrait_row_${id}`}>{this.idToPortrait(id)}</th>\n        { _.map(this.characterIds, (targetId) => <th key={`relation_${id}_${targetId}`}>{ RelationGraph.calculateRelation(id, targetId) }</th>) }\n      </tr>\n    );\n  }\n\n  idToPortrait(id: string) {\n    const { localization } = this.props;\n    return (\n      <img\n        className=\"portrait\"\n        src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${id}.png`}\n        alt={localization.character.name[id]}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <table>\n          <tbody>\n            <tr>\n              <th />\n              { _.map(this.characterIds, (id) => <th key={`portrait_column_${id}`}>{this.idToPortrait(id)}</th>) }\n            </tr>\n            { _.map(this.characterIds, (id) => this.createRow(id)) }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default RelationGraph;\n","import _ from 'lodash';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport React, { Component } from 'react';\n\nimport '../../app.css';\nimport './relation.css';\n\nimport { LocalizationData } from '../../library/common';\nimport characterJson from '../../db/character.json';\nimport relationJson from '../../db/relation.json';\nimport relationMemberJson from '../../db/relation_member.json';\n\nconst characters = characterJson as { [key: string]: {} };\nconst relations = relationJson as { [key: string]: string };\nconst relationMembers = relationMemberJson as { [key: string]: string[] };\n\ninterface HorseRow {\n  name: string;\n  relation: number;\n  image: string;\n}\n\ninterface IProps {\n  localization: LocalizationData;\n}\n\ninterface IState {\n  horseId: string\n}\n\nclass RelationQuery extends Component<IProps, IState> {\n  static calculateRelation(id1: string | undefined, id2: string): number {\n    if (id1 === id2 || id1 === undefined) {\n      return 0;\n    }\n    const targetRelations: string[] = _.intersection(relationMembers[id1], relationMembers[id2]);\n    return _.reduce(targetRelations, (sum: number, id: string) => sum + parseInt(relations[id], 10), 0);\n  }\n\n  horses: string[];\n\n  constructor(props: IProps) {\n    super(props);\n    this.horses = Object.keys(characters);\n    this.state = {\n      horseId: '',\n    };\n  }\n\n  selectHorse = (event: any) => {\n    const { value } = event.target;\n    this.setState({ horseId: value });\n  };\n\n  buildRelationArray() {\n    const { horseId } = this.state;\n    const { localization } = this.props;\n    let rel: HorseRow[] = [];\n    this.horses.forEach((targetHorseId) => {\n      if (targetHorseId !== horseId) {\n        rel.push({\n          name: localization.character.name[targetHorseId],\n          relation: RelationQuery.calculateRelation(horseId, targetHorseId),\n          image: `${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`,\n        });\n      }\n    });\n    rel = _.sortBy(rel, [(horseRow) => -horseRow.relation]);\n\n    return rel.map((horseRow) => (\n      <tr>\n        <td>{horseRow.name}</td>\n        <td><img className=\"portrait\" src={horseRow.image} alt={horseRow.name} /></td>\n        <td>{horseRow.relation}</td>\n      </tr>\n    ));\n  }\n\n  render() {\n    const { localization } = this.props;\n    const relationArray = this.buildRelationArray();\n    return (\n      <div className=\"content\">\n        <div className=\"dropdown\">\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">ウマ</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              onChange={this.selectHorse}\n            >\n              { this.horses.map((targetHorseId) => (\n                <MenuItem key={`${targetHorseId}_option`} value={targetHorseId}>\n                  <img\n                    className=\"portrait\"\n                    src={`${process.env.PUBLIC_URL}/static/image/character/portrait/${targetHorseId}.png`}\n                    alt={localization.character.name[targetHorseId]}\n                  />\n                  {localization.character.name[targetHorseId]}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <table>\n          {relationArray}\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default RelationQuery;\n","import _ from 'lodash';\nimport {\n  Row, Col, Select,\n} from 'antd';\nimport React, { Component } from 'react';\n\nimport {\n  CourseCategory, CourseDataType, LocalizationData,\n} from '../library/common';\n\nimport 'antd/dist/antd.css';\nimport './component.css';\n\nconst { Option } = Select;\n\ninterface IProps {\n  localization: LocalizationData,\n  courseCategories: CourseCategory,\n  setData: (key: string, value: any) => void,\n  state: {\n    racecourse?: string,\n    ground?: string,\n    distance?: number,\n    course?: CourseDataType,\n  },\n}\n\ninterface IState {\n}\n\nclass CourseData extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  getRacecourseComponent() {\n    const { localization, setData, state } = this.props;\n    const { racecourse } = state;\n    return (\n      <Col span={4}>\n        <div className=\"flex\">\n          <span className=\"select-label\">{`${localization.site.Racecourse}:`}</span>\n          <Select className=\"select\" value={racecourse} onChange={(value) => setData('racecourse', value)}>\n            { _.map(localization.course.racecourse, (value: string, key: string) => (\n              <Option value={key}>{value}</Option>\n            ))}\n          </Select>\n        </div>\n      </Col>\n    );\n  }\n\n  getGroundComponent() {\n    const {\n      localization, courseCategories, setData, state,\n    } = this.props;\n    const { racecourse, ground } = state;\n\n    if (racecourse === undefined) {\n      return null;\n    }\n    return (\n      <Col span={4}>\n        <div className=\"flex\">\n          <span className=\"select-label\">{`${localization.site.Ground}:`}</span>\n          <Select className=\"select\" value={ground} onChange={(value) => setData('ground', value)}>\n            { _.map(courseCategories[racecourse], (value: string, key: string) => (\n              <Option value={key}>{localization.course.ground[key]}</Option>\n            ))}\n          </Select>\n        </div>\n      </Col>\n    );\n  }\n\n  getDistanceComponent() {\n    const {\n      localization, courseCategories, setData, state,\n    } = this.props;\n    const { racecourse, ground, distance } = state;\n\n    if (racecourse === undefined || ground === undefined) {\n      return null;\n    }\n    return (\n      <Col span={4}>\n        <div className=\"flex\">\n          <span className=\"select-label\">{`${localization.site.Distance}:`}</span>\n          <Select className=\"select\" value={distance} onChange={(value) => setData('distance', value)}>\n            { _.map(courseCategories[racecourse][ground], (value: string, key: number) => (\n              <Option value={key}>{key}</Option>\n            ))}\n          </Select>\n        </div>\n      </Col>\n    );\n  }\n\n  render() {\n    const racecourseComponent = this.getRacecourseComponent();\n    const groundComponent = this.getGroundComponent();\n    const distanceComponent = this.getDistanceComponent();\n\n    return (\n      <Row gutter={[8, 8]}>\n        {racecourseComponent}\n        {groundComponent}\n        {distanceComponent}\n      </Row>\n    );\n  }\n}\n\nexport default CourseData;\n","import _ from 'lodash';\nimport { Row, Col, Select } from 'antd';\nimport React, { Component } from 'react';\n\nimport { LocalizationData } from '../../library/common';\n\nimport '../component.css';\n\ninterface IProps {\n  localization: LocalizationData;\n  setData: (key: string, value: any) => void,\n  state: { [key: string]: string },\n\n}\n\ninterface IState {\n}\n\nclass HorseProperRate extends Component<IProps, IState> {\n  static readonly properRateTypes = {\n    GroundType: ['GroundTypeTurf', 'GroundTypeDirt'],\n    DistanceType: ['DistanceTypeShort', 'DistanceTypeMile', 'DistanceTypeMiddle', 'DistanceTypeLong'],\n    RunningStyle: ['RunningStyleNige', 'RunningStyleSenko', 'RunningStyleSashi', 'RunningStyleOikomi'],\n  };\n\n  static readonly properRate = {\n    G: '1',\n    F: '2',\n    E: '3',\n    D: '4',\n    C: '5',\n    B: '6',\n    A: '7',\n    S: '8',\n  };\n\n  render() {\n    const { localization, setData, state } = this.props;\n    return (\n      <>\n        { _.map(HorseProperRate.properRateTypes, (properTypes, properName) => (\n          <>\n            <Row gutter={[8, 8]}><Col span={24}>{localization.site[properName]}</Col></Row>\n            <Row gutter={[8, 8]}>\n              { _.map(properTypes, (properRateType) => {\n                const camelProperRateType = _.camelCase(properRateType);\n                return (\n                  <Col span={4}>\n                    <div className=\"flex\">\n                      <span className=\"select-label\">{`${localization.site[properRateType]}:`}</span>\n                      <Select className=\"select\" value={state[camelProperRateType]} onChange={(value) => setData(camelProperRateType, value)}>\n                        { _.map(HorseProperRate.properRate, (value, key) => (\n                          <Select.Option value={value}>{localization.site[key]}</Select.Option>\n                        ))}\n                      </Select>\n                    </div>\n                  </Col>\n                );\n              })}\n            </Row>\n          </>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default HorseProperRate;\n","import _ from 'lodash';\nimport { InputNumber, Row, Col } from 'antd';\nimport React, { Component } from 'react';\n\nimport { LocalizationData } from '../../library/common';\n\nimport '../component.css';\n\ninterface IProps {\n  localization: LocalizationData;\n  setData: (key: string, value: any) => void,\n  state: { [key: string]: number },\n}\n\ninterface IState {\n}\n\nclass HorseStatData extends Component<IProps, IState> {\n  static readonly stats = {\n    speed: 'Speed',\n    stamina: 'Stamina',\n    pow: 'Power',\n    guts: 'Guts',\n    wiz: 'Wiz',\n  };\n\n  render() {\n    const { localization, setData, state } = this.props;\n    return (\n      <Row gutter={[8, 8]}>\n        { _.map(HorseStatData.stats, (value, key) => (\n          <Col span={4}>\n            <div className=\"flex\">\n              <span className=\"select-label\">{`${localization.site[value]}:`}</span>\n              <InputNumber className=\"select\" value={state[key]} min={1} max={1200} onChange={(data) => setData(key, data)} />\n            </div>\n          </Col>\n        ))}\n      </Row>\n    );\n  }\n}\n\nexport default HorseStatData;\n","export enum ResultFlag {\n  FullLastSpurt,\n}\n\nclass Common {\n}\n\nexport default Common;\n","import React, { Component } from 'react';\n\nimport { LocalizationData } from '../../library/common';\nimport HorseProperRate from './horse-proper-rate';\nimport HorseStatData from './horse-stat-data';\n\ninterface IProps {\n  localization: LocalizationData,\n  setData: (key: string, value: any) => void,\n  state: any,\n}\n\ninterface IState {\n}\n\nclass HorseData extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n  }\n\n  render() {\n    const { localization, setData, state } = this.props;\n    return (\n      <>\n        <HorseStatData localization={localization} setData={setData} state={state} />\n        <HorseProperRate localization={localization} setData={setData} state={state} />\n      </>\n    );\n  }\n}\n\nexport default HorseData;\n","import {\n  Row, Col, Select,\n} from 'antd';\nimport React, { Component } from 'react';\n\nimport {\n  GroundStatus, LocalizationData, RunningStyle,\n} from '../../library/common';\n\nimport 'antd/dist/antd.css';\nimport '../component.css';\n\nconst { Option } = Select;\n\ninterface IProps {\n  localization: LocalizationData,\n  setData: (key: string, value: any) => void,\n  state: {\n    strategy?: string,\n    groundStatus?: string,\n  },\n}\n\ninterface IState {\n}\n\nclass RaceData extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  getStrategyComponent() {\n    const { localization, setData, state } = this.props;\n    const { strategy } = state;\n    return (\n      <Col span={4}>\n        <div className=\"flex\">\n          <span className=\"select-label\">{`${localization.site.Strategy}:`}</span>\n          <Select className=\"select\" value={strategy} onChange={(value) => setData('strategy', value)}>\n            <Option value={RunningStyle.Nige}>{localization.site.RunningStyleNige}</Option>\n            <Option value={RunningStyle.Senko}>{localization.site.RunningStyleSenko}</Option>\n            <Option value={RunningStyle.Sashi}>{localization.site.RunningStyleSashi}</Option>\n            <Option value={RunningStyle.Oikomi}>{localization.site.RunningStyleOikomi}</Option>\n          </Select>\n        </div>\n      </Col>\n    );\n  }\n\n  getGroundStatusComponent() {\n    const { localization, setData, state } = this.props;\n    const { groundStatus } = state;\n    return (\n      <Col span={4}>\n        <div className=\"flex\">\n          <span className=\"select-label\">{`${localization.site.GroundStatus}:`}</span>\n          <Select className=\"select\" value={groundStatus} onChange={(value) => setData('groundStatus', value)}>\n            <Option value={GroundStatus.Good}>{localization.site.GroundStatusGood}</Option>\n            <Option value={GroundStatus.SlightlyHeavy}>{localization.site.GroundStatusSlightlyHeavy}</Option>\n            <Option value={GroundStatus.Heavy}>{localization.site.GroundStatusHeavy}</Option>\n            <Option value={GroundStatus.Bad}>{localization.site.GroundStatusBad}</Option>\n          </Select>\n        </div>\n      </Col>\n    );\n  }\n\n  render() {\n    const strategyComponent = this.getStrategyComponent();\n    const groundStatusComponent = this.getGroundStatusComponent();\n\n    return (\n      <Row gutter={[8, 8]}>\n        {strategyComponent}\n        {groundStatusComponent}\n      </Row>\n    );\n  }\n}\n\nexport default RaceData;\n","import {\n  RunningStyle, CoursePhase, GroundType, GroundStatus,\n} from '../common';\n\nconst constant = {\n  baseDistance: 2000,\n  minSpeed: {\n    minSpeedRate: 0.85,\n    minSpeedGutsCoefSqrt: 200,\n    minSpeedGutsCoef: 0.001,\n  },\n  startDash: {\n    targetSpeedCoefficient: 0.85,\n    startAccelAdd: 24,\n  },\n  targetSpeed: {\n    baseTargetSpeedRandomMinusVal1: -0.0065,\n    baseTargetSpeedRandomMinusVal2: 5500,\n    baseTargetSpeedRandomPlusVal1: 5500,\n    baseTargetSpeedRandomLogCoefficient: 0.1,\n    baseTargetSpeedRandomCoefficient: 0.01,\n    targetSpeedCoefficient: {\n      [RunningStyle.Nige]: {\n        [CoursePhase.Start]: 1,\n        [CoursePhase.Middle]: 0.98,\n        [CoursePhase.End]: 0.98,\n        [CoursePhase.LastSpurt]: 0.98,\n      },\n      [RunningStyle.Senko]: {\n        [CoursePhase.Start]: 0.978,\n        [CoursePhase.Middle]: 0.991,\n        [CoursePhase.End]: 0.975,\n        [CoursePhase.LastSpurt]: 0.975,\n      },\n      [RunningStyle.Sashi]: {\n        [CoursePhase.Start]: 0.938,\n        [CoursePhase.Middle]: 0.998,\n        [CoursePhase.End]: 0.994,\n        [CoursePhase.LastSpurt]: 0.994,\n      },\n      [RunningStyle.Oikomi]: {\n        [CoursePhase.Start]: 0.931,\n        [CoursePhase.Middle]: 1,\n        [CoursePhase.End]: 1,\n        [CoursePhase.LastSpurt]: 1,\n      },\n    },\n    phaseEndBaseTargetSpeedCoef: 500,\n    addSpeedParamCoef: 0.002,\n    baseTargetSpeedCoef: 1.05,\n    lastSpurtBaseTargetSpeedAddCoef: 0.01,\n    lastSpurtTargetSpeedCoefSqrt: 500,\n    upSlopeAddSpeedVal1: 200,\n    downSlopeAddSpeedVal1: 0.3,\n    downSlopeAddSpeedVal2: 10,\n    firstBlockSlowStyles: [RunningStyle.Sashi, RunningStyle.Oikomi],\n    lastSpurtTargetSpeedStep: 0.1,\n  },\n  accel: {\n    accelPhaseCoef: {\n      [RunningStyle.Nige]: {\n        [CoursePhase.Start]: 1,\n        [CoursePhase.Middle]: 1,\n        [CoursePhase.End]: 0.996,\n        [CoursePhase.LastSpurt]: 0.996,\n      },\n      [RunningStyle.Senko]: {\n        [CoursePhase.Start]: 0.985,\n        [CoursePhase.Middle]: 1,\n        [CoursePhase.End]: 0.996,\n        [CoursePhase.LastSpurt]: 0.996,\n      },\n      [RunningStyle.Sashi]: {\n        [CoursePhase.Start]: 0.975,\n        [CoursePhase.Middle]: 1,\n        [CoursePhase.End]: 1,\n        [CoursePhase.LastSpurt]: 1,\n      },\n      [RunningStyle.Oikomi]: {\n        [CoursePhase.Start]: 0.945,\n        [CoursePhase.Middle]: 1,\n        [CoursePhase.End]: 0.997,\n        [CoursePhase.LastSpurt]: 0.997,\n      },\n    },\n    accelPowCoef: 0.0006,\n    accelPowCoefUpSlope: 0.0004,\n    accelPowCoefSqrt: 500,\n    startAccelAdd: 24,\n    accelDecreaseCoef: {\n      [CoursePhase.Start]: -1.2,\n      [CoursePhase.Middle]: -0.8,\n      [CoursePhase.End]: 1.2,\n      [CoursePhase.LastSpurt]: 1.2,\n    },\n    accelDecreaseZeroHpCoef: -1.2,\n  },\n  hp: {\n    hpInitialVal1: 0.8,\n    hpMaxCoef: {\n      [RunningStyle.Nige]: 0.95,\n      [RunningStyle.Senko]: 0.89,\n      [RunningStyle.Sashi]: 1.0,\n      [RunningStyle.Oikomi]: 0.995,\n    },\n    hpDecBase: 20,\n    hpDecRateBaseNormal: 1,\n    hpDecRateBaseTemptation: 1.6,\n    hpDecRateBasePositionKeepPaseDown: 0.6,\n    hpDecRateMultiplyDownSlopeAccelMode: 0.4,\n    speedGapParam1: 12,\n    speedGapParam1Pow: 144,\n    groundModifierMultiHpSub: {\n      [GroundType.Turf]: {\n        [GroundStatus.Good]: 1,\n        [GroundStatus.SlightlyHeavy]: 1,\n        [GroundStatus.Heavy]: 1.02,\n        [GroundStatus.Bad]: 1.02,\n      },\n      [GroundType.Dirt]: {\n        [GroundStatus.Good]: 1,\n        [GroundStatus.SlightlyHeavy]: 1,\n        [GroundStatus.Heavy]: 1.01,\n        [GroundStatus.Bad]: 1.02,\n      },\n    },\n    hpGutsBase: 1,\n    hpGutsCoef: 200,\n    hpGutsCoefSqrt: 600,\n  },\n  course: {\n    distanceTargetSpeedCoefficient: 0.001,\n    blockPortion: 1 / 24,\n    distanceShort: { min: 0, max: 1400 },\n    distanceMile: { min: 1401, max: 1800 },\n    distanceMiddle: { min: 1801, max: 2400 },\n    distanceLong: { min: 2401, max: Number.MAX_VALUE },\n    startSpeed: 3,\n    phaseStart: 1 / 6,\n    phaseMiddle: 4 / 6,\n    phaseEnd: 5 / 6,\n    positionSense: 10 / 24,\n    frameTime: 1 / 15,\n    gateTimeRange: { min: 0, max: 0.1 },\n    finishTimeCoef: 1.18,\n  },\n  lastSpurt: {\n    determineRateBase: 0.15,\n    determineRateWizMultiplier: 0.0005,\n    targetDistanceFromGoal: 60,\n  },\n  slope: {\n    downSlopeAccelModeChanceBase: 0.0004,\n    downSlopeEndChance: 0.2,\n  },\n};\n\nexport default constant;\n","import _ from 'lodash';\nimport nr from 'newton-raphson-method';\nimport util from 'util';\n\nimport constant from './constant';\nimport Course from './course';\nimport Horse, { HorseStat } from './horse';\n\nimport distanceProperRateJson from '../../db/proper_rate/distance.json';\nimport groundProperRateJson from '../../db/proper_rate/ground.json';\nimport runningStyleProperRateJson from '../../db/proper_rate/running_style.json';\nimport { ResultFlag } from './common';\nimport { RunningStyle, CoursePhase } from '../common';\n\nconst distanceProperRate = distanceProperRateJson as { [key: string]: { speed: number, power: number } };\nconst groundProperRate = groundProperRateJson as { [key: string]: number };\nconst runningStyleProperRate = runningStyleProperRateJson as { [key: string]: number };\n\nenum BreakPoint {\n  Goal = '0000',\n\n  FinishFirstBlock = '1000',\n  FinishPhaseStart = '1010',\n  FinishPhaseMiddle = '1020',\n  FinishPhaseEnd = '1030',\n  FinishPhaseLastSpurt = '1040',\n\n  LastSpurt = '2000',\n  PositionSense = '2010',\n  Skill = '2020',\n  DownSlopeAccelMode = '2030',\n  ZeroHp = '2040',\n\n  FinishBlock = '3000',\n  Slope = '3010',\n\n  None = '9999',\n}\n\ninterface BreakPointData {\n  distance?: number,\n  time?: number,\n  parameters?: any\n}\n\ninterface BreakPointSet {\n  [BreakPoint.FinishFirstBlock]?: BreakPointData,\n  [BreakPoint.FinishPhaseStart]?: BreakPointData,\n  [BreakPoint.FinishPhaseMiddle]?: BreakPointData,\n  [BreakPoint.FinishPhaseEnd]?: BreakPointData,\n  [BreakPoint.FinishPhaseLastSpurt]?: BreakPointData,\n\n  [BreakPoint.LastSpurt]?: BreakPointData,\n  [BreakPoint.PositionSense]?: BreakPointData,\n  [BreakPoint.Skill]?: BreakPointData[],\n  [BreakPoint.DownSlopeAccelMode]?: BreakPointData,\n  [BreakPoint.ZeroHp]?: BreakPointData,\n\n  [BreakPoint.FinishBlock]?: BreakPointData,\n  [BreakPoint.Slope]?: BreakPointData[],\n\n  [BreakPoint.Goal]?: BreakPointData,\n\n  [BreakPoint.None]?: BreakPointData,\n}\n\nenum Mode {\n  StartDash,\n  FirstBlock,\n  LastSpurt,\n  UpSlope,\n  DownSlopeAccel,\n  Temptation,\n  PositionKeepPaceDown,\n  ZeroHp,\n}\n\ninterface LastSpurtCandidate {\n  time: number,\n  targetSpeed: number,\n  lastSpurtDistance: number,\n}\n\nclass RaceHorse {\n  private _course: Course;\n\n  private _horse: Horse;\n\n  private _runningStyle: RunningStyle;\n\n  private _speedWizRandomRange: [number, number] = [0, 0];\n\n  private _speedWizRandom: number = 0;\n\n  private _phase: CoursePhase = CoursePhase.Start;\n\n  private _mode: Set<Mode> = new Set<Mode>();\n\n  private _speed: number = 0;\n\n  private _lastSpurtTargetSpeed: number = 0;\n\n  private _hp: number = 0;\n\n  private _distance: number = 0;\n\n  private _time: number = 0;\n\n  private _breakPoints: BreakPointSet = {};\n\n  private _startDashTargetSpeed: number | undefined = undefined;\n\n  private _slopePer: number = 0;\n\n  resultFlag: Set<ResultFlag> = new Set<ResultFlag>();\n\n  constructor({ horse, runningStyle, course }: {\n    horse: Horse,\n    runningStyle: RunningStyle,\n    course: Course,\n  }) {\n    this._horse = horse;\n    this._course = course;\n    this._runningStyle = runningStyle;\n\n    const upperBound = (this.stat.wiz / constant.targetSpeed.baseTargetSpeedRandomPlusVal1) * constant.targetSpeed.baseTargetSpeedRandomCoefficient\n      * Math.log10(this.stat.wiz * constant.targetSpeed.baseTargetSpeedRandomLogCoefficient);\n    const lowerBound = constant.targetSpeed.baseTargetSpeedRandomMinusVal1\n      + (this.stat.wiz / constant.targetSpeed.baseTargetSpeedRandomPlusVal1) * constant.targetSpeed.baseTargetSpeedRandomCoefficient\n      * Math.log10(this.stat.wiz * constant.targetSpeed.baseTargetSpeedRandomLogCoefficient);\n    this._speedWizRandomRange = [lowerBound, upperBound];\n    this.refreshSpeedRandomValue();\n  }\n\n  get maxHp(): number {\n    return this._course.distance + this.stat.stamina * constant.hp.hpMaxCoef[this._runningStyle] * constant.hp.hpInitialVal1;\n  }\n\n  get hp(): number {\n    return this._hp;\n  }\n\n  get time(): number {\n    return this._time;\n  }\n\n  private get lastSpurtDetermineRate(): number {\n    return constant.lastSpurt.determineRateBase + constant.lastSpurt.determineRateWizMultiplier * this.stat.wiz;\n  }\n\n  private get stat(): HorseStat {\n    return {\n      speed: this._horse.stat.speed,\n      stamina: this._horse.stat.stamina,\n      pow: this._horse.stat.pow,\n      guts: this._horse.stat.guts,\n      wiz: this._horse.stat.wiz,\n    };\n  }\n\n  private get minSpeed(): number {\n    return this._course.baseTargetSpeed * constant.minSpeed.minSpeedRate\n      + Math.sqrt(this.stat.guts * constant.minSpeed.minSpeedGutsCoefSqrt) * constant.minSpeed.minSpeedGutsCoef;\n  }\n\n  private get startDashTargetSpeed(): number {\n    if (this._startDashTargetSpeed === undefined) {\n      this._startDashTargetSpeed = Math.max(this._course.baseTargetSpeed * constant.startDash.targetSpeedCoefficient, this.minSpeed);\n    }\n    return this._startDashTargetSpeed;\n  }\n\n  private get baseTargetSpeed(): number {\n    return this._course.baseTargetSpeed * constant.targetSpeed.targetSpeedCoefficient[this._runningStyle][this._phase];\n  }\n\n  private get baseTargetSpeedRandom(): number {\n    return this.baseTargetSpeed * this._speedWizRandom;\n  }\n\n  private get phaseEndTargetSpeedAddition(): number {\n    return Math.sqrt(constant.targetSpeed.phaseEndBaseTargetSpeedCoef * this.stat.speed)\n      * constant.targetSpeed.addSpeedParamCoef * distanceProperRate[this._horse.properRate.distanceType[this._course.distanceType]].speed;\n  }\n\n  private get maxLastSpurtTargetSpeed(): number {\n    return Math.max(\n      (this.baseTargetSpeed + this.phaseEndTargetSpeedAddition + constant.targetSpeed.lastSpurtBaseTargetSpeedAddCoef * this._course.baseTargetSpeed)\n          * constant.targetSpeed.baseTargetSpeedCoef\n        + this.phaseEndTargetSpeedAddition,\n      this.minSpeed,\n    );\n  }\n\n  private get lastSpurtTargetSpeed(): number {\n    return this._lastSpurtTargetSpeed;\n  }\n\n  private get realTargetSpeed(): number {\n    if (this._mode.has(Mode.StartDash) || this._mode.has(Mode.FirstBlock)) {\n      return this.startDashTargetSpeed;\n    }\n    if (this._mode.has(Mode.LastSpurt)) {\n      return this.lastSpurtTargetSpeed;\n    }\n\n    const slopePer = this._slopePer;\n    let slopeAdd = 0;\n    if (slopePer >= 1) {\n      slopeAdd = -slopePer * constant.targetSpeed.upSlopeAddSpeedVal1 / this.stat.pow;\n    } else if (slopePer <= -1 && this._mode.has(Mode.DownSlopeAccel)) {\n      slopeAdd = constant.targetSpeed.downSlopeAddSpeedVal1 + Math.abs(slopePer) / constant.targetSpeed.downSlopeAddSpeedVal2;\n    }\n    return this.baseTargetSpeed + this.baseTargetSpeedRandom + slopeAdd\n      + (this._phase >= 2 ? this.phaseEndTargetSpeedAddition : 0);\n  }\n\n  get targetSpeed(): number {\n    if (this._mode.has(Mode.ZeroHp)) {\n      return this.minSpeed;\n    }\n    return Math.max(this.minSpeed, this.realTargetSpeed);\n  }\n\n  refreshSpeedRandomValue(): void {\n    this._speedWizRandom = _.random(...this._speedWizRandomRange, true);\n  }\n\n  private get baseAccel(): number {\n    return constant.accel.accelPhaseCoef[this._runningStyle][this._phase]\n      * Math.sqrt(this.stat.pow * constant.accel.accelPowCoefSqrt)\n      * groundProperRate[this._horse.properRate.groundType[this._course.groundType]]\n      * distanceProperRate[this._horse.properRate.distanceType[this._course.distanceType]].power;\n  }\n\n  get accel(): number {\n    if (this._mode.has(Mode.ZeroHp)) {\n      return constant.accel.accelDecreaseZeroHpCoef;\n    }\n\n    if (this._speed <= this.targetSpeed) {\n      return (this._mode.has(Mode.StartDash) ? constant.accel.startAccelAdd : 0)\n        + this.baseAccel * (this._mode.has(Mode.UpSlope) ? constant.accel.accelPowCoefUpSlope : constant.accel.accelPowCoef);\n    }\n    return constant.accel.accelDecreaseCoef[this._phase];\n  }\n\n  private get phaseEndHpDecreaseRate() {\n    return constant.hp.hpGutsBase + constant.hp.hpGutsCoef / Math.sqrt(constant.hp.hpGutsCoefSqrt * this.stat.guts);\n  }\n\n  private get modeHpDecreaseRate() {\n    if (this._mode.has(Mode.Temptation)) {\n      return constant.hp.hpDecRateBaseTemptation;\n    }\n    if (this._mode.has(Mode.PositionKeepPaceDown)) {\n      return constant.hp.hpDecRateBasePositionKeepPaseDown;\n    }\n    return constant.hp.hpDecRateBaseNormal;\n  }\n\n  get hpDecreaseRate(): number {\n    return constant.hp.hpDecBase * constant.hp.groundModifierMultiHpSub[this._course.groundType][this._course.groundStatus]\n      * (this._phase >= CoursePhase.End ? this.phaseEndHpDecreaseRate : 1)\n      * this.modeHpDecreaseRate\n      * (this._mode.has(Mode.DownSlopeAccel) ? constant.hp.hpDecRateMultiplyDownSlopeAccelMode : 1);\n  }\n\n  get minBreakpoint(): { breakPoint: BreakPoint, distance: number, parameters: any } {\n    let minKey: BreakPoint = BreakPoint.None;\n    let minDistance: number = Number.MAX_VALUE;\n    let minParameters: any;\n    for (const [key, value] of Object.entries(this._breakPoints)) {\n      let targetValue: BreakPointData;\n      if (Array.isArray(value)) {\n        targetValue = value[value.length - 1];\n      } else {\n        targetValue = value;\n      }\n\n      if (targetValue.distance !== undefined) {\n        if (targetValue.distance < minDistance) {\n          minDistance = targetValue.distance;\n          minKey = key as BreakPoint;\n          minParameters = targetValue.parameters;\n        } else if (targetValue.distance === minDistance && key < minKey) {\n          minKey = key as BreakPoint;\n          minParameters = targetValue.parameters;\n        }\n      } else if (targetValue.time !== undefined) {\n        const distance = this._distance + (targetValue.time - this._time) * this._speed;\n        if (distance < minDistance) {\n          minDistance = distance;\n          minKey = key as BreakPoint;\n          minParameters = targetValue.parameters;\n        } else if (targetValue.distance === minDistance && key < minKey) {\n          minKey = key as BreakPoint;\n          minParameters = targetValue.parameters;\n        }\n      }\n    }\n    return { breakPoint: minKey, distance: minDistance, parameters: minParameters };\n  }\n\n  private static getAccelHpDecrease({\n    initialSpeed, accel, time, hpDecreaseRate, baseTargetSpeed,\n  }: {\n    initialSpeed: number, accel: number, time: number, hpDecreaseRate: number, baseTargetSpeed: number,\n  }): number {\n    const speedCoefficient = (initialSpeed - baseTargetSpeed + constant.hp.speedGapParam1);\n    return hpDecreaseRate\n      * (accel ** 2 * time ** 3 / 3 + accel * time ** 2 * speedCoefficient + speedCoefficient ** 2 * time)\n      / constant.hp.speedGapParam1Pow;\n  }\n\n  private static getSpeedHpDecrease({ speed, hpDecreaseRate, baseTargetSpeed }: { speed: number, hpDecreaseRate: number, baseTargetSpeed: number }) {\n    return hpDecreaseRate * (speed - baseTargetSpeed + constant.hp.speedGapParam1) ** 2 / constant.hp.speedGapParam1Pow;\n  }\n\n  private static getRunHpDecrease({\n    speed, hpDecreaseRate, baseTargetSpeed, time,\n  }: {\n    speed: number, hpDecreaseRate: number, baseTargetSpeed: number, time: number,\n  }): number {\n    return RaceHorse.getSpeedHpDecrease({ speed, hpDecreaseRate, baseTargetSpeed }) * time;\n  }\n\n  private static accelToTargetSpeed({\n    accel, currentSpeed, targetSpeed, maxDistance, hpDecreaseRate, baseTargetSpeed,\n  }: {\n    accel: number,\n    currentSpeed: number,\n    targetSpeed: number,\n    maxDistance: number,\n    hpDecreaseRate: number,\n    baseTargetSpeed: number\n  }) {\n    const targetSpeedByDistanceSquare = currentSpeed ** 2 + 2 * accel * maxDistance;\n    const finalSpeed = accel > 0\n      ? Math.min(targetSpeed, Math.sqrt(targetSpeedByDistanceSquare))\n      : Math.max(targetSpeed, Math.sqrt(Math.max(targetSpeedByDistanceSquare, 0)));\n    const time = (finalSpeed - currentSpeed) / accel;\n    const distance = (currentSpeed + currentSpeed + accel * time) * time / 2;\n    const hpCost = RaceHorse.getAccelHpDecrease({\n      initialSpeed: currentSpeed,\n      accel,\n      time,\n      hpDecreaseRate,\n      baseTargetSpeed,\n    });\n    return {\n      time, distance, hpCost, finalSpeed,\n    };\n  }\n\n  private doGateOpen(): void {\n    this._time += Math.floor(_.random(constant.course.gateTimeRange.min, constant.course.gateTimeRange.max, true) / constant.course.frameTime)\n      * constant.course.frameTime;\n    this._mode.add(Mode.StartDash);\n    this._breakPoints[BreakPoint.FinishBlock] = { distance: this._course.blockDistance };\n    this._breakPoints[BreakPoint.Goal] = { distance: this._course.distance };\n  }\n\n  private finishStartDash(): void {\n    const { accel, targetSpeed } = this;\n    const {\n      time, distance, hpCost, finalSpeed,\n    } = RaceHorse.accelToTargetSpeed({\n      accel,\n      currentSpeed: this._speed,\n      targetSpeed,\n      maxDistance: this._course.distance,\n      hpDecreaseRate: this.hpDecreaseRate,\n      baseTargetSpeed: this._course.baseTargetSpeed,\n    });\n    this._time += time;\n    this._distance += distance;\n    this._hp -= hpCost;\n    this._speed = finalSpeed;\n\n    this._mode.delete(Mode.StartDash);\n    if (this._runningStyle === RunningStyle.Sashi || this._runningStyle === RunningStyle.Oikomi) {\n      this._breakPoints[BreakPoint.FinishFirstBlock] = { distance: this._course.blockDistance };\n      this._mode.add(Mode.FirstBlock);\n    } else {\n      this._breakPoints[BreakPoint.FinishPhaseStart] = { distance: this._course.phaseStartDistance };\n    }\n  }\n\n  private calculateAccelAndRun(distance: number) {\n    const { accel, targetSpeed } = this;\n    const {\n      time: accelTime, distance: accelDistance, hpCost: accelHpCost, finalSpeed,\n    } = RaceHorse.accelToTargetSpeed({\n      accel,\n      currentSpeed: this._speed,\n      targetSpeed,\n      maxDistance: distance - this._distance,\n      hpDecreaseRate: this.hpDecreaseRate,\n      baseTargetSpeed: this._course.baseTargetSpeed,\n    });\n\n    const runDistance = (distance - this._distance - accelDistance);\n    const runTime = runDistance / finalSpeed;\n    const runHpCost = RaceHorse.getRunHpDecrease({\n      speed: finalSpeed,\n      time: runTime,\n      hpDecreaseRate: this.hpDecreaseRate,\n      baseTargetSpeed: this._course.baseTargetSpeed,\n    });\n\n    return {\n      time: accelTime + runTime,\n      distance: accelDistance + runDistance,\n      hpCost: accelHpCost + runHpCost,\n      finalSpeed,\n    };\n  }\n\n  private doAccelAndRun(distance: number) {\n    const { accel, targetSpeed, hpDecreaseRate } = this;\n    const {\n      time: accelTime, distance: accelDistance, hpCost: accelHpCost, finalSpeed,\n    } = RaceHorse.accelToTargetSpeed({\n      accel,\n      currentSpeed: this._speed,\n      targetSpeed,\n      maxDistance: distance - this._distance,\n      hpDecreaseRate,\n      baseTargetSpeed: this._course.baseTargetSpeed,\n    });\n\n    if (accelHpCost > this.hp && !this._mode.has(Mode.ZeroHp)) {\n      /**\n       * Accel HP cost formula:\n       * hpDecrease = hpDecreaseRate * (accel^2 * time^3 / 3 + accel * time^2 * speedCoefficient + speedCoefficient^2 * time)/ 144\n       * speedCoefficient = initialSpeed - baseTargetSpeed + 12\n       * Given accel and initialSpeed, hpDecrease = this.hp is a cubic equation of time.\n       * It's hard to get a formula solution, but we can get a approximate value by applying Newton's Method.\n       */\n      const speedCoefficient = this._speed - this._course.baseTargetSpeed + constant.hp.speedGapParam1;\n      const realAccelTime = nr(\n        (time: number) => (\n          hpDecreaseRate * (accel ** 2 * time ** 3 / 3 + accel * time ** 2 * speedCoefficient + speedCoefficient ** 2 * time)\n        ),\n        (time: number) => (\n          hpDecreaseRate * (accel ** 2 * time ** 2 + accel * time * 2 * speedCoefficient + speedCoefficient ** 2)\n        ),\n        10,\n      );\n      const realAccelDistance = (this._speed + this._speed + accel * accelTime) * accelTime / 2;\n      this._time += realAccelTime;\n      this._distance += realAccelDistance;\n      this._hp = 0;\n      this._mode.add(Mode.ZeroHp);\n      delete this._breakPoints[BreakPoint.ZeroHp];\n      return false;\n    }\n\n    this._hp -= accelHpCost;\n    this._time += accelTime;\n    this._distance += accelDistance;\n    this._speed = finalSpeed;\n\n    const speedHpDecreaseRate = RaceHorse.getSpeedHpDecrease({\n      speed: this._speed,\n      hpDecreaseRate,\n      baseTargetSpeed: this._course.baseTargetSpeed,\n    });\n    const runDistance = distance - this._distance;\n    const runTime = runDistance / this._speed;\n    const runHpCost = speedHpDecreaseRate * runTime;\n\n    if (runHpCost > this.hp && !this._mode.has(Mode.ZeroHp)) {\n      const realRunTime = this._hp / speedHpDecreaseRate;\n      const realRunDistance = realRunTime * this._speed;\n      this._time += realRunTime;\n      this._distance += realRunDistance;\n      this._hp = 0;\n      this._mode.add(Mode.ZeroHp);\n      delete this._breakPoints[BreakPoint.ZeroHp];\n      return false;\n    }\n\n    this._hp -= runHpCost;\n    this._time += runTime;\n    this._distance += runDistance;\n    if (!this._mode.has(Mode.ZeroHp)) {\n      this._breakPoints[BreakPoint.ZeroHp] = { distance: this._distance + this.hp / speedHpDecreaseRate * this._speed };\n    }\n    return true;\n  }\n\n  private finishFirstBlock = () => {\n    this._mode.delete(Mode.FirstBlock);\n    this._breakPoints[BreakPoint.FinishPhaseStart] = { distance: this._course.phaseStartDistance };\n  };\n\n  private finishBlock = () => {\n    if (!this._mode.has(Mode.LastSpurt) && this._course.distance > this._distance) {\n      this.refreshSpeedRandomValue();\n      this._breakPoints[BreakPoint.FinishBlock] = { distance: this._distance + this._course.blockDistance };\n    }\n  };\n\n  private finishPhaseStart = () => {\n    this._phase = CoursePhase.Middle;\n    this._breakPoints[BreakPoint.FinishPhaseMiddle] = { distance: this._course.phaseMiddleDistance };\n  };\n\n  private static randomByCandidates(lastSpurtSpeedCandidates: LastSpurtCandidate[], determineRate: number): LastSpurtCandidate {\n    const randomNumber = Math.random();\n    const targetItem = Math.min(\n      lastSpurtSpeedCandidates.length - 1,\n      Math.floor(Math.log(randomNumber) / Math.log(1 - determineRate)),\n    );\n    return lastSpurtSpeedCandidates[targetItem];\n  }\n\n  private calculateLastSpurt = (): { lastSpurtDistance: number, lastSpurtTargetSpeed: number } => {\n    this._mode.add(Mode.LastSpurt);\n    this._lastSpurtTargetSpeed = this.maxLastSpurtTargetSpeed;\n    const { hpCost, finalSpeed } = this.calculateAccelAndRun(this._course.distance - constant.lastSpurt.targetDistanceFromGoal);\n    this._mode.delete(Mode.LastSpurt);\n    if (hpCost <= this._hp && finalSpeed === this._lastSpurtTargetSpeed) {\n      this.resultFlag.add(ResultFlag.FullLastSpurt);\n      return {\n        lastSpurtDistance: this._distance,\n        lastSpurtTargetSpeed: finalSpeed,\n      };\n    }\n\n    let lastSpurtSpeedCandidates: LastSpurtCandidate[] = [];\n    const phaseEndBaseTargetSpeed = this.baseTargetSpeed + this.phaseEndTargetSpeedAddition;\n    const maxDistance = this._course.distance - this._distance - constant.lastSpurt.targetDistanceFromGoal;\n    const { accel, hpDecreaseRate } = this;\n    const { baseTargetSpeed } = this._course;\n    for (; this.lastSpurtTargetSpeed >= phaseEndBaseTargetSpeed; this._lastSpurtTargetSpeed -= constant.targetSpeed.lastSpurtTargetSpeedStep) {\n      const {\n        time: phaseEndAccelTime,\n        distance: phaseEndAccelDistance,\n        hpCost: phaseEndAccelHpCost,\n        finalSpeed: phaseEndFinalSpeed,\n      } = RaceHorse.accelToTargetSpeed({\n        accel,\n        currentSpeed: this._speed,\n        targetSpeed: phaseEndBaseTargetSpeed,\n        maxDistance,\n        hpDecreaseRate,\n        baseTargetSpeed,\n      });\n      const {\n        time: lastSpurtAccelTime,\n        distance: lastSpurtAccelDistance,\n        hpCost: lastSpurtAccelHpCost,\n      } = RaceHorse.accelToTargetSpeed({\n        accel,\n        currentSpeed: phaseEndFinalSpeed,\n        targetSpeed: this.lastSpurtTargetSpeed,\n        maxDistance: maxDistance - phaseEndAccelDistance,\n        hpDecreaseRate,\n        baseTargetSpeed,\n      });\n      const runDistance = maxDistance - phaseEndAccelDistance - lastSpurtAccelDistance;\n      const phaseEndRunTime = runDistance / phaseEndBaseTargetSpeed;\n      const phaseEndRunHpCost = RaceHorse.getRunHpDecrease({\n        speed: phaseEndBaseTargetSpeed,\n        time: phaseEndRunTime,\n        hpDecreaseRate,\n        baseTargetSpeed,\n      });\n      const lastSpurtRunTime = runDistance / this.lastSpurtTargetSpeed;\n      const lastSpurtRunHpCost = RaceHorse.getRunHpDecrease({\n        speed: this.lastSpurtTargetSpeed,\n        time: lastSpurtRunTime,\n        hpDecreaseRate,\n        baseTargetSpeed,\n      });\n\n      if (this.hp >= phaseEndAccelHpCost + lastSpurtAccelHpCost + lastSpurtRunHpCost) {\n        lastSpurtSpeedCandidates.push({\n          lastSpurtDistance: this._distance,\n          targetSpeed: this.lastSpurtTargetSpeed,\n          time: phaseEndAccelTime + lastSpurtAccelTime + lastSpurtRunTime,\n        });\n      } else if (this.hp >= phaseEndAccelHpCost + lastSpurtAccelHpCost + phaseEndRunHpCost) {\n        const hpLeft = this.hp - (phaseEndAccelHpCost + lastSpurtAccelHpCost + phaseEndRunHpCost);\n        const hpDiff = lastSpurtRunHpCost - phaseEndRunHpCost;\n        lastSpurtSpeedCandidates.push({\n          lastSpurtDistance: this._distance + phaseEndAccelDistance + runDistance * (1 - hpLeft / hpDiff),\n          targetSpeed: this.lastSpurtTargetSpeed,\n          time: phaseEndAccelTime + lastSpurtAccelTime + (hpLeft / hpDiff) * lastSpurtRunTime + (1 - hpLeft / hpDiff) * phaseEndRunTime,\n        });\n      }\n    }\n    lastSpurtSpeedCandidates.push({\n      lastSpurtDistance: Number.MAX_VALUE,\n      targetSpeed: phaseEndBaseTargetSpeed,\n      time: Number.MAX_VALUE,\n    });\n    lastSpurtSpeedCandidates = _.sortBy(lastSpurtSpeedCandidates, ['time']);\n    const candidate = RaceHorse.randomByCandidates(lastSpurtSpeedCandidates, this.lastSpurtDetermineRate);\n    return {\n      lastSpurtDistance: candidate.lastSpurtDistance,\n      lastSpurtTargetSpeed: candidate.targetSpeed,\n    };\n  };\n\n  private finishPhaseMiddle = () => {\n    this._phase = CoursePhase.End;\n    const { lastSpurtDistance, lastSpurtTargetSpeed } = this.calculateLastSpurt();\n    this._breakPoints[BreakPoint.FinishPhaseEnd] = { distance: this._course.phaseEndDistance };\n    this._breakPoints[BreakPoint.LastSpurt] = { distance: lastSpurtDistance };\n    this._lastSpurtTargetSpeed = lastSpurtTargetSpeed;\n  };\n\n  private finishPhaseEnd = () => {\n    this._phase = CoursePhase.LastSpurt;\n    this._breakPoints[BreakPoint.FinishPhaseLastSpurt] = { distance: this._course.distance };\n  };\n\n  private doLastSpurt = () => {\n    this._mode.add(Mode.LastSpurt);\n    delete this._breakPoints[BreakPoint.FinishBlock];\n  };\n\n  private finishLastSpurt = () => {};\n\n  private triggerPositionSense = () => {};\n\n  private zeroHp = () => {\n    if (this.hp <= 0) {\n      this._mode.add(Mode.ZeroHp);\n    }\n  };\n\n  private changeSlope = ({ slopePer }: { slopePer: number }) => {\n    if (this._slopePer > -1 && slopePer <= -1) {\n      this.checkDownSlopeAccelMode();\n    } else if (this._slopePer <= -1 && slopePer > -1) {\n      this._mode.delete(Mode.DownSlopeAccel);\n      delete this._breakPoints[BreakPoint.DownSlopeAccelMode];\n    }\n    this._slopePer = slopePer;\n  };\n\n  private checkDownSlopeAccelMode = () => {\n    if (this._mode.has(Mode.DownSlopeAccel)) {\n      if (Math.random() <= constant.slope.downSlopeEndChance) {\n        this._mode.delete(Mode.DownSlopeAccel);\n      } else {\n        this._breakPoints[BreakPoint.DownSlopeAccelMode] = { time: this._time + 1 };\n      }\n    } else {\n      if (Math.random() <= this.stat.wiz * constant.slope.downSlopeAccelModeChanceBase) {\n        this._mode.add(Mode.DownSlopeAccel);\n        this._breakPoints[BreakPoint.DownSlopeAccelMode] = { time: this._time + 1 };\n      }\n    }\n  };\n\n  private triggerSkill = () => {};\n\n  private reachGoal = () => {\n    this._breakPoints = {};\n  };\n\n  private readonly breakPointMap: { [key in BreakPoint]: (parameters: any) => void } = {\n    [BreakPoint.None]: () => {},\n    [BreakPoint.FinishFirstBlock]: this.finishFirstBlock,\n    [BreakPoint.FinishBlock]: this.finishBlock,\n    [BreakPoint.FinishPhaseStart]: this.finishPhaseStart,\n    [BreakPoint.FinishPhaseMiddle]: this.finishPhaseMiddle,\n    [BreakPoint.FinishPhaseEnd]: this.finishPhaseEnd,\n    [BreakPoint.LastSpurt]: this.doLastSpurt,\n    [BreakPoint.FinishPhaseLastSpurt]: this.finishLastSpurt,\n    [BreakPoint.PositionSense]: this.triggerPositionSense,\n    [BreakPoint.ZeroHp]: this.zeroHp,\n    [BreakPoint.Slope]: this.changeSlope,\n    [BreakPoint.DownSlopeAccelMode]: this.checkDownSlopeAccelMode,\n    [BreakPoint.Skill]: this.triggerSkill,\n    [BreakPoint.Goal]: this.reachGoal,\n  };\n\n  buildSlopeBreakPoints() {\n    const slopePers = this._course.allSlopePers;\n    for (let i = slopePers.length - 1; i > 0; i -= 1) {\n      this.addBreakPoint(BreakPoint.Slope, {\n        distance: slopePers[i].distance,\n        parameters: {\n          slopePer: slopePers[i].slope_per,\n        },\n      });\n    }\n  }\n\n  addBreakPoint(type: BreakPoint, data: BreakPointData) {\n    switch (type) {\n      case BreakPoint.Skill:\n      case BreakPoint.Slope:\n        if (!(type in this._breakPoints)) {\n          this._breakPoints[type] = [data];\n        } else {\n          this._breakPoints[type]?.push(data);\n        }\n        break;\n      default:\n        this._breakPoints[type] = data;\n        break;\n    }\n  }\n\n  removeBreakPoint(type: BreakPoint) {\n    switch (type) {\n      case BreakPoint.Skill:\n      case BreakPoint.Slope:\n        this._breakPoints[type]?.pop();\n        if (this._breakPoints[type]?.length === 0) {\n          delete this._breakPoints[type];\n        }\n        break;\n      default:\n        delete this._breakPoints[type];\n        break;\n    }\n  }\n\n  simulate() {\n    this._speed = constant.course.startSpeed;\n    this._time = 0;\n    this._distance = 0;\n    this._hp = this.maxHp;\n    this._mode = new Set();\n    this._phase = CoursePhase.Start;\n    this._breakPoints = {};\n\n    this.buildSlopeBreakPoints();\n    this.doGateOpen();\n    this.debugOutput();\n    this.finishStartDash();\n    this.debugOutput();\n\n    while (Object.keys(this._breakPoints).length > 0) {\n      const { breakPoint, distance, parameters } = this.minBreakpoint;\n      if (this.doAccelAndRun(distance)) {\n        this.removeBreakPoint(breakPoint);\n        this.breakPointMap[breakPoint](parameters);\n      }\n      this.debugOutput();\n    }\n  }\n\n  debugOutput() {\n    return;\n    const debugData = {\n      hp: this.hp,\n      speed: this._speed,\n      time: this._time,\n      distance: this._distance,\n      phase: this._phase,\n      mode: Array.from(this._mode),\n      breakPoints: util.inspect(this._breakPoints, { depth: null }),\n      slopePer: this._slopePer,\n    };\n    console.log(debugData);\n  }\n}\n\nexport default RaceHorse;\n","import React, { Component } from 'react';\n\nimport _ from 'lodash';\nimport Common, { CourseDataType, LocalizationData } from '../../library/common';\nimport { RaceResultData } from './common';\nimport constant from '../../library/race/constant';\nimport { ResultFlag } from '../../library/race/common';\n\nimport '../component.css';\n\ninterface IProps {\n  localization: LocalizationData;\n  raceResults: RaceResultData[];\n  course?: CourseDataType,\n}\n\ninterface IState {\n}\n\nclass RaceResult extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n  }\n\n  render() {\n    const { localization, raceResults, course } = this.props;\n    if (course === undefined || raceResults.length === 0) {\n      return (\n        <>\n        </>\n      );\n    }\n\n    const timeAverage = _.meanBy(raceResults, 'time');\n    const timeShown: string = (timeAverage * constant.course.finishTimeCoef > parseFloat(course.finish_time_min) / 10000)\n      ? Common.secondToTime(timeAverage * constant.course.finishTimeCoef)\n      : localization.site.TimeMin;\n\n    let timeDeviationSum = 0;\n    let fullLastSpurtCount = 0;\n    let hpLeftSum = 0;\n    for (const result of raceResults) {\n      timeDeviationSum += (result.time - timeAverage) ** 2;\n      if (result.resultFlags.has(ResultFlag.FullLastSpurt)) {\n        fullLastSpurtCount += 1;\n      }\n      hpLeftSum += result.hpLeft;\n    }\n    return (\n      <table>\n        <tr>\n          <th>{localization.site.TimeAverage}</th>\n          <th>{localization.site.TimeStandardDeviation}</th>\n          <th>{localization.site.TimeShown}</th>\n          <th>{localization.site.FullLastSpurtRate}</th>\n          <th>{localization.site.HpLeftAverage}</th>\n        </tr>\n        <tr>\n          <td>{timeAverage.toFixed(3)}</td>\n          <td>{Math.sqrt(timeDeviationSum / raceResults.length).toFixed(3)}</td>\n          <td>{timeShown}</td>\n          <td>{(fullLastSpurtCount / raceResults.length).toLocaleString('en', { style: 'percent' })}</td>\n          <td>{(hpLeftSum / raceResults.length).toFixed(3)}</td>\n        </tr>\n      </table>\n    );\n  }\n}\n\nexport default RaceResult;\n","import {\n  DistanceType, ProperRate, GroundType, RunningStyle,\n} from '../common';\n\nexport interface HorseStat {\n  speed: number;\n  stamina: number;\n  pow: number;\n  guts: number;\n  wiz: number;\n}\n\nexport interface HorseProperRate {\n  distanceType: { [key in DistanceType]: ProperRate },\n  groundType: { [key in GroundType]: ProperRate },\n  runningStyle: { [key in RunningStyle]: ProperRate },\n}\n\nclass Horse {\n  stat: HorseStat;\n\n  properRate: HorseProperRate;\n\n  constructor(\n    { stat, properRate }: {\n      stat: HorseStat,\n      properRate: HorseProperRate,\n    },\n  ) {\n    this.stat = stat;\n    this.properRate = properRate;\n  }\n}\n\nexport default Horse;\n","import constant from './constant';\nimport {\n  DistanceType, GroundType, GroundStatus, CourseDataType, TurnType,\n} from '../common';\n\nclass Course {\n  private _courseData: CourseDataType;\n\n  groundStatus: GroundStatus;\n\n  static getDistanceType(distance: number): DistanceType {\n    if (distance >= constant.course.distanceShort.min && distance <= constant.course.distanceShort.max) {\n      return DistanceType.Short;\n    }\n    if (distance >= constant.course.distanceMile.min && distance <= constant.course.distanceMile.max) {\n      return DistanceType.Mile;\n    }\n    if (distance >= constant.course.distanceMiddle.min && distance <= constant.course.distanceMiddle.max) {\n      return DistanceType.Middle;\n    }\n    if (distance >= constant.course.distanceLong.min && distance <= constant.course.distanceLong.max) {\n      return DistanceType.Long;\n    }\n    return DistanceType.Long;\n  }\n\n  constructor({ courseData, groundStatus } : { courseData: CourseDataType, groundStatus: GroundStatus }) {\n    this._courseData = courseData;\n    this.groundStatus = groundStatus;\n  }\n\n  get distance(): number {\n    return this._courseData.distance;\n  }\n\n  get distanceType(): DistanceType {\n    return Course.getDistanceType(this.distance);\n  }\n\n  get groundType(): GroundType {\n    return this._courseData.ground;\n  }\n\n  get turnType(): TurnType {\n    return this._courseData.turn;\n  }\n\n  get blockDistance(): number {\n    return this.distance * constant.course.blockPortion;\n  }\n\n  get phaseStartDistance(): number {\n    return this.distance * constant.course.phaseStart;\n  }\n\n  get phaseMiddleDistance(): number {\n    return this.distance * constant.course.phaseMiddle;\n  }\n\n  get phaseEndDistance(): number {\n    return this.distance * constant.course.phaseEnd;\n  }\n\n  get positionSenseDistance(): number {\n    return this.distance * constant.course.positionSense;\n  }\n\n  get baseTargetSpeed(): number {\n    return 20 - (this.distance - constant.baseDistance) * constant.course.distanceTargetSpeedCoefficient;\n  }\n\n  get allSlopePers(): { distance: number, slope_per: number }[] {\n    return this._courseData.slope_per;\n  }\n}\n\nexport default Course;\n","import _ from 'lodash';\nimport {\n  Button, Col, InputNumber, Row, Progress,\n} from 'antd';\nimport React, { Component } from 'react';\nimport Promise from 'bluebird';\n\nimport {\n  CourseDataType, DistanceType, GroundStatus, GroundType, LocalizationData, RunningStyle,\n} from '../../library/common';\nimport {\n  IHorseState, IGroundProperRate, IDistanceProperRate, IRunningStyleProperRate, RaceResultData,\n} from './common';\nimport Horse from '../../library/race/horse';\nimport Course from '../../library/race/course';\nimport RaceHorse from '../../library/race/race-horse';\n\nimport 'antd/dist/antd.css';\nimport '../component.css';\n\ninterface SimulatorState extends IHorseState, IGroundProperRate, IDistanceProperRate, IRunningStyleProperRate {\n  strategy?: string,\n  groundStatus?: string,\n  racecourse?: string,\n  ground?: string,\n  distance?: number,\n  course?: CourseDataType,\n}\n\ninterface IProps {\n  localization: LocalizationData;\n  setData: (key: string, value: any) => void,\n  state: SimulatorState,\n}\n\ninterface IState {\n  running: boolean,\n  finished: number,\n  rounds: number,\n}\n\nclass SimulatorCalculator extends Component<IProps, IState> {\n  static readonly concurrency = 50;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      running: false,\n      rounds: 1000,\n      finished: 0,\n    };\n  }\n\n  calculate = async () => {\n    this.setState({\n      running: true,\n      finished: 0,\n    });\n    const { state, setData } = this.props;\n    const {\n      speed, stamina, pow, guts, wiz,\n      strategy, groundStatus, course,\n      groundTypeTurf, groundTypeDirt,\n      distanceTypeShort, distanceTypeMile, distanceTypeMiddle, distanceTypeLong,\n      runningStyleNige, runningStyleSenko, runningStyleSashi, runningStyleOikomi,\n    } = state;\n    const { rounds } = this.state;\n\n    const targetCourse = new Course({\n      courseData: course as CourseDataType,\n      groundStatus: groundStatus as GroundStatus,\n    });\n    const targetHorse = new Horse({\n      stat: {\n        speed, stamina, pow, guts, wiz,\n      },\n      properRate: {\n        groundType: {\n          [GroundType.Turf]: groundTypeTurf,\n          [GroundType.Dirt]: groundTypeDirt,\n        },\n        distanceType: {\n          [DistanceType.Short]: distanceTypeShort,\n          [DistanceType.Mile]: distanceTypeMile,\n          [DistanceType.Middle]: distanceTypeMiddle,\n          [DistanceType.Long]: distanceTypeLong,\n        },\n        runningStyle: {\n          [RunningStyle.Nige]: runningStyleNige,\n          [RunningStyle.Senko]: runningStyleSenko,\n          [RunningStyle.Sashi]: runningStyleSashi,\n          [RunningStyle.Oikomi]: runningStyleOikomi,\n        },\n      },\n    });\n\n    let counter = 0;\n    let started = 0;\n    const worksPerThread = Math.ceil(rounds / SimulatorCalculator.concurrency);\n    const raceResults: RaceResultData[] = [];\n    await Promise.map(\n      new Array(SimulatorCalculator.concurrency),\n      async () => {\n        const raceHorse = new RaceHorse({\n          horse: targetHorse, course: targetCourse, runningStyle: strategy as RunningStyle,\n        });\n        for (let i = 0; i < worksPerThread && started < rounds; i += 1) {\n          started += 1;\n          raceHorse.simulate();\n          raceResults.push({\n            time: raceHorse.time,\n            resultFlags: raceHorse.resultFlag,\n            hpLeft: raceHorse.hp > 0 ? raceHorse.hp : 0,\n            skills: {\n              normal: 0,\n              rare: 0,\n              unique: false,\n            },\n            temptation: {\n              triggered: false,\n              time: 0,\n            },\n          });\n          counter += 1;\n          this.setState({ finished: counter });\n          await Promise.delay(0);\n        }\n      },\n      { concurrency: SimulatorCalculator.concurrency },\n    );\n    this.setState({ running: false });\n    setData('raceResults', raceResults);\n  };\n\n  render() {\n    const { localization, state } = this.props;\n    const { course } = state;\n    const { finished, rounds, running } = this.state;\n    const progressPercent = _.round(finished / rounds * 100, 1);\n    return (\n      <Row gutter={[8, 8]}>\n        <Col span={4}>\n          <div className=\"flex\">\n            <span className=\"select-label\">{`${localization.site.SimulatorCalculateRounds}:`}</span>\n            <InputNumber\n              className=\"select\"\n              value={rounds}\n              min={1}\n              max={1000}\n              onChange={(value) => this.setState({ rounds: value })}\n            />\n            <Button\n              className=\"select-label\"\n              type=\"primary\"\n              disabled={course === undefined || running}\n              onClick={this.calculate}\n            >\n              {localization.site.SimulatorCalculate}\n            </Button>\n            { running ? <Progress className=\"select-label\" percent={progressPercent} /> : null }\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default SimulatorCalculator;\n","import _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Row, Col, TreeSelect } from 'antd';\n\nimport { LocalizationData, SkillData } from '../../library/common';\n\nimport skillJson from '../../db/skill.json';\n\nimport 'antd/dist/antd.css';\nimport '../component.css';\n\ninterface SkillSelectorDefinition {\n  categoryName: string,\n  icon?: string,\n  sets: string[],\n  children?: SkillSelectorDefinition[],\n}\n\nconst SKILL_SELECTOR_HIERARCHY: SkillSelectorDefinition[] = [\n  {\n    categoryName: 'SkillPassive',\n    sets: ['10061'],\n    children: [\n      {\n        categoryName: 'Speed',\n        icon: '10011',\n        sets: ['10011'],\n      },\n      {\n        categoryName: 'Stamina',\n        icon: '10021',\n        sets: ['10021'],\n      },\n      {\n        categoryName: 'Power',\n        icon: '10031',\n        sets: ['10031'],\n      },\n      {\n        categoryName: 'Guts',\n        icon: '10041',\n        sets: ['10041'],\n      },\n      {\n        categoryName: 'Wiz',\n        icon: '10051',\n        sets: ['10051'],\n      },\n    ],\n  },\n  {\n    categoryName: 'SkillActive',\n    sets: [],\n    children: [\n      {\n        categoryName: 'SkillSpeed',\n        icon: '20011',\n        sets: ['20011', '20012'],\n      },\n      {\n        categoryName: 'SkillAccel',\n        icon: '20041',\n        sets: ['20041', '20042'],\n      },\n      {\n        categoryName: 'SkillHeal',\n        icon: '20021',\n        sets: ['20021', '20022'],\n      },\n      {\n        categoryName: 'SkillLane',\n        icon: '20051',\n        sets: ['20051', '20052'],\n      },\n      {\n        categoryName: 'SkillSight',\n        icon: '20091',\n        sets: ['20091', '20092'],\n      },\n      {\n        categoryName: 'SkillGate',\n        icon: '20061',\n        sets: ['20061', '20062'],\n      },\n    ],\n  },\n  {\n    categoryName: 'SkillDebuff',\n    sets: [],\n    children: [\n      {\n        categoryName: 'SkillSpeed',\n        icon: '30011',\n        sets: ['30011', '30012'],\n      },\n      {\n        categoryName: 'SkillTemptation',\n        icon: '30041',\n        sets: ['30041', '30042'],\n      },\n      {\n        categoryName: 'SkillHeal',\n        icon: '30051',\n        sets: ['30051', '30052'],\n      },\n      {\n        categoryName: 'SkillSight',\n        icon: '30071',\n        sets: ['30071', '30072'],\n      },\n    ],\n  },\n];\n\nconst { TreeNode } = TreeSelect;\nconst skillData = skillJson as { [key: string]: SkillData };\n\ninterface IProps {\n  localization: LocalizationData,\n  setData: (key: string, value: any) => void,\n  state: {\n  },\n}\n\ninterface IState {\n}\n\nclass SkillSelector extends Component<IProps, IState> {\n  private _skillSets: { [key: string]: SkillData[] } = {};\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n    };\n\n    for (const [, skill] of Object.entries(skillData)) {\n      if (!(skill.icon_id in this._skillSets)) {\n        this._skillSets[skill.icon_id] = [];\n      }\n\n      if (skill.rarity === 1 || skill.rarity === 2) {\n        this._skillSets[skill.icon_id].push(skill);\n      }\n    }\n  }\n\n  buildSkillTreeNodes(definitions: SkillSelectorDefinition[] | undefined, localization: LocalizationData): JSX.Element[] {\n    if (!definitions) {\n      return [];\n    }\n\n    return _.map(definitions, (definition) => {\n      let title: any = localization.site[definition.categoryName];\n      if ('icon' in definition) {\n        title = (\n          <span>\n            <img\n              className=\"skillIcon\"\n              src={`${process.env.PUBLIC_URL}/static/image/skill/${definition.icon}.png`}\n              alt={title}\n            />\n            {title}\n          </span>\n        );\n      }\n\n      let children: JSX.Element[] = [];\n      if ('children' in definition) {\n        children = this.buildSkillTreeNodes(definition.children, localization);\n      }\n\n      let skills: JSX.Element[] = [];\n      if ('sets' in definition) {\n        skills = _\n          .chain(definition.sets)\n          .map((set) => this._skillSets[set])\n          .filter((skillSet) => Array.isArray(skillSet))\n          .flatten()\n          .sortBy(['group_id', 'id'])\n          .map((skill) => (\n            <TreeNode\n              key={skill.id}\n              title={(\n                <span className={`skill_${skill.rarity}`}>\n                  <img\n                    className=\"skillIcon\"\n                    src={`${process.env.PUBLIC_URL}/static/image/skill/${skill.icon_id}.png`}\n                    alt={localization.site.Speed}\n                  />\n                  {skill.name}\n                </span>\n              )}\n              value={skill.id}\n            />\n          ))\n          .value();\n      }\n\n      return (\n        <TreeNode\n          key={definition.categoryName}\n          title={title}\n          value={0}\n          disabled\n        >\n          {children}\n          {skills}\n        </TreeNode>\n      );\n    });\n  }\n\n  render() {\n    const { localization, setData } = this.props;\n    return (\n      <Row gutter={[8, 8]}>\n        <Col span={24}>\n          <div className=\"flex\">\n            <span className=\"select-label\">{`${localization.site.SkillSelector}:`}</span>\n            <TreeSelect\n              dropdownPopupAlign={{\n                overflow: { adjustY: 0, adjustX: 0 },\n                offset: [0, 2],\n              }}\n              treeLine\n              allowClear\n              multiple\n              autoClearSearchValue\n              showCheckedStrategy={TreeSelect.SHOW_PARENT}\n              style={{\n                width: '100%',\n              }}\n              onChange={(value) => setData('skills', value)}\n            >\n              { this.buildSkillTreeNodes(SKILL_SELECTOR_HIERARCHY, localization) }\n            </TreeSelect>\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default SkillSelector;\n","/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\n\nimport {\n  CourseCategory, CourseDataType, GroundStatus, GroundType, LocalizationData, ProperRate, RunningStyle,\n} from '../../library/common';\nimport {\n  IHorseState, IGroundProperRate, IDistanceProperRate, IRunningStyleProperRate, RaceResultData,\n} from './common';\nimport CourseData from '../course-data';\nimport HorseData from './horse-data';\nimport RaceData from './race-data';\nimport RaceResult from './race-result';\nimport SimulatorCalculator from './simulator-calculator';\nimport SkillSelector from './skill-selector';\n\nimport 'antd/dist/antd.css';\nimport '../component.css';\nimport '../../app.css';\n\nimport courseJson from '../../db/course.json';\n\nconst courses = courseJson as CourseDataType[];\n\ninterface IProps {\n  localization: LocalizationData;\n}\n\ninterface IProperRate extends IGroundProperRate, IDistanceProperRate, IRunningStyleProperRate {\n}\n\ninterface IState extends IHorseState, IProperRate {\n  skills?: string[],\n\n  racecourse?: string,\n  ground?: GroundType,\n  distance?: number,\n  course?: CourseDataType,\n\n  strategy?: RunningStyle,\n  groundStatus?: GroundStatus,\n\n  raceResults: RaceResultData[],\n}\n\nclass Simulator extends Component<IProps, IState> {\n  private courseCategories: CourseCategory = {};\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.loadCourseData();\n    this.state = {\n      speed: 1200,\n      stamina: 300,\n      pow: 1200,\n      guts: 300,\n      wiz: 300,\n\n      groundTypeTurf: ProperRate.A,\n      groundTypeDirt: ProperRate.A,\n\n      distanceTypeShort: ProperRate.A,\n      distanceTypeMile: ProperRate.A,\n      distanceTypeMiddle: ProperRate.A,\n      distanceTypeLong: ProperRate.A,\n\n      runningStyleNige: ProperRate.A,\n      runningStyleSenko: ProperRate.A,\n      runningStyleSashi: ProperRate.A,\n      runningStyleOikomi: ProperRate.A,\n\n      strategy: RunningStyle.Nige,\n      racecourse: '10001',\n      ground: GroundType.Turf,\n      distance: 1200,\n      groundStatus: GroundStatus.Good,\n      course: this.courseCategories['10001'][GroundType.Turf][1200],\n      raceResults: [],\n    };\n  }\n\n  updateCourse = () => {\n    const {\n      strategy, racecourse, ground, distance, groundStatus,\n    } = this.state;\n    if (racecourse === undefined || ground === undefined || distance === undefined || strategy === undefined || groundStatus === undefined) {\n      this.setState({ course: undefined });\n    } else {\n      this.setState({ course: this.courseCategories[racecourse][ground][distance] });\n    }\n  };\n\n  setData = (key: string, value: any): void => {\n    switch (key) {\n      case 'racecourse':\n        this.setState({\n          racecourse: value,\n          ground: undefined,\n          distance: undefined,\n          course: undefined,\n        });\n        break;\n      case 'ground':\n        this.setState({\n          ground: value as GroundType,\n          distance: undefined,\n          course: undefined,\n        });\n        break;\n      case 'distance':\n      case 'strategy':\n      case 'groundStatus':\n        this.setState<'distance' | 'strategy' | 'groundStatus'>({ [key]: value }, this.updateCourse);\n        break;\n      case 'speed':\n      case 'stamina':\n      case 'pow':\n      case 'guts':\n      case 'wiz':\n        this.setState({ [key]: value as number } as Pick<IHorseState, keyof IHorseState>);\n        break;\n      case 'raceResults':\n        this.setState({ raceResults: value });\n        break;\n      case 'skills':\n        this.setState({ skills: value as string[] });\n        break;\n      default:\n        this.setState({ [key]: value } as Pick<IProperRate, keyof IProperRate>);\n        break;\n    }\n  };\n\n  loadCourseData() {\n    for (const course of courses) {\n      if (!(course.race_track_id in this.courseCategories)) {\n        this.courseCategories[course.race_track_id] = {};\n      }\n      if (!(course.ground in this.courseCategories[course.race_track_id])) {\n        this.courseCategories[course.race_track_id][course.ground] = {};\n      }\n      this.courseCategories[course.race_track_id][course.ground][course.distance] = course;\n    }\n  }\n\n  render() {\n    const { localization } = this.props;\n    const { raceResults, course } = this.state;\n    return (\n      <div className=\"content\">\n        <HorseData\n          localization={localization}\n          setData={this.setData}\n          state={this.state}\n        />\n        <SkillSelector\n          localization={localization}\n          setData={this.setData}\n          state={this.state}\n        />\n        <CourseData\n          localization={localization}\n          courseCategories={this.courseCategories}\n          setData={this.setData}\n          state={this.state}\n        />\n        <RaceData\n          localization={localization}\n          setData={this.setData}\n          state={this.state}\n        />\n        <SimulatorCalculator\n          localization={localization}\n          state={this.state}\n          setData={this.setData}\n        />\n        <RaceResult localization={localization} raceResults={raceResults} course={course} />\n      </div>\n    );\n  }\n}\n\nexport default Simulator;\n","import React, { Component } from 'react';\nimport {\n  ComposedChart, Line, XAxis, YAxis, Area, Tooltip, ReferenceLine, Legend, ReferenceArea, Label,\n} from 'recharts';\n\nimport {\n  CourseCategory, CourseDataType, LocalizationData,\n} from '../../library/common';\n\nimport 'react-tabs/style/react-tabs.css';\n\nconst CORNER_COLOR: { [key: string]: any } = {\n  Default: {\n    stroke: '#00ff00',\n    strokeOpacity: 0.3,\n    fill: '#00ff00',\n    fillOpacity: 0.3,\n  },\n  1: {\n    stroke: '#00bb00',\n    strokeOpacity: 0.3,\n    fill: '#00bb00',\n    fillOpacity: 0.3,\n  },\n  2: {\n    stroke: '#009900',\n    strokeOpacity: 0.3,\n    fill: '#009900',\n    fillOpacity: 0.3,\n  },\n  3: {\n    stroke: '#00f660',\n    strokeOpacity: 0.3,\n    fill: '#006600',\n    fillOpacity: 0.3,\n  },\n  4: {\n    stroke: '#003300',\n    strokeOpacity: 0.3,\n    fill: '#003300',\n    fillOpacity: 0.3,\n  },\n}\n\ninterface IProps {\n  localization: LocalizationData\n  state: {\n    course?: CourseDataType,\n  }\n}\n\ninterface IState {\n}\n\nclass CourseChart extends Component<IProps, IState> {\n  private courseCategories: CourseCategory = {};\n\n  render() {\n    const { localization, state } = this.props;\n    const { course } = state;\n\n    if (course === undefined) {\n      return (<></>);\n    }\n\n    const blockDistance = course.distance / 24;\n    const slopeDistance = course.distance / 1000;\n    let lastSlopePer = 0;\n    let lastSlopePerDistance = 0;\n    const data = [];\n    for (const slope of course.slope_per) {\n      if (lastSlopePer === 0 && slope.slope_per !== 0 && lastSlopePerDistance < slope.distance - slopeDistance) {\n        data.push({\n          slopePer: 0,\n          distance: slope.distance - slopeDistance,\n        });\n      }\n\n      data.push({\n        slopePer: slope.slope_per,\n        distance: slope.distance,\n      });\n      lastSlopePer = slope.slope_per;\n      lastSlopePerDistance = slope.distance;\n    }\n\n    const referenceAreas = [];\n    for (let i = 0; i < course.param.corner.length; i += 1) {\n      let index = 'Default';\n      if (course.param.corner_index.includes(i)) {\n        index = (course.param.corner_index.indexOf(i) + 1).toString();\n      }\n      referenceAreas.push(<ReferenceArea\n        x1={course.param.corner[i].start}\n        x2={course.param.corner[i].end}\n        stroke={CORNER_COLOR[index].stroke}\n        strokeOpacity={CORNER_COLOR[index].strokeOpacity}\n        fill={CORNER_COLOR[index].fill}\n        fillOpacity={CORNER_COLOR[index].fillOpacity}\n        label={<Label position=\"insideTop\">{localization.site[`CourseCorner${index}`]}</Label>}\n      />);\n    }\n    return (\n      <ComposedChart\n        width={1000}\n        height={500}\n        data={data}\n      >\n        <XAxis type=\"number\" dataKey=\"distance\" />\n        <YAxis domain={[-3, 3]} />\n        <Tooltip />\n        <Legend />\n        <Line dot={false} name={localization.site.CourseSlope} type=\"monotone\" dataKey=\"slopePer\" stroke=\"#8884d8\" />\n        <ReferenceLine\n          x={blockDistance * 10}\n          stroke=\"red\"\n          label={`${localization.site.CoursePositionKeep}${localization.site.CourseEnd}`}\n        />\n        <ReferenceLine\n          x={blockDistance * 4}\n          stroke=\"red\"\n          label={`${localization.site.CourseMiddlePhase}`}\n        />\n        <ReferenceLine\n          x={blockDistance * 16}\n          stroke=\"red\"\n          label={`${localization.site.CourseEndPhase}`}\n        />\n        { referenceAreas }\n      </ComposedChart>\n    );\n  }\n}\n\nexport default CourseChart;\n","/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\n\nimport {\n  CourseCategory, CourseDataType, GroundType, LocalizationData,\n} from '../../library/common';\nimport CourseData from '../course-data';\nimport CourseChart from './course-chart';\n\nimport 'react-tabs/style/react-tabs.css';\n\nimport courseJson from '../../db/course.json';\n\nconst courses = courseJson as CourseDataType[];\n\ninterface IProps {\n  localization: LocalizationData\n}\n\ninterface IState {\n  racecourse?: string,\n  ground?: GroundType,\n  distance?: number,\n  course?: CourseDataType,\n}\n\nclass Course extends Component<IProps, IState> {\n  private courseCategories: CourseCategory = {};\n\n  constructor(props: IProps) {\n    super(props);\n\n    this.loadCourseData();\n    this.state = {\n      racecourse: '10006',\n      ground: GroundType.Turf,\n      distance: 1600,\n      course: this.courseCategories['10006'][GroundType.Turf][1600],\n    };\n  }\n\n  setData = (key: string, value: any): void => {\n    this.setState({ [key]: value } as Pick<IState, keyof IState>, this.updateCourse);\n  };\n\n  updateCourse = () => {\n    const { racecourse, ground, distance } = this.state;\n    if (racecourse === undefined || ground === undefined || distance === undefined) {\n      this.setState({ course: undefined });\n    } else {\n      this.setState({ course: this.courseCategories[racecourse][ground][distance] });\n    }\n  };\n\n  loadCourseData() {\n    for (const course of courses) {\n      if (!(course.race_track_id in this.courseCategories)) {\n        this.courseCategories[course.race_track_id] = {};\n      }\n      if (!(course.ground in this.courseCategories[course.race_track_id])) {\n        this.courseCategories[course.race_track_id][course.ground] = {};\n      }\n      this.courseCategories[course.race_track_id][course.ground][course.distance] = course;\n    }\n  }\n\n  render() {\n    const { localization } = this.props;\n    return (\n      <div className=\"content\">\n        <CourseData\n          localization={localization}\n          courseCategories={this.courseCategories}\n          setData={this.setData}\n          state={this.state}\n        />\n        <CourseChart\n          localization={localization}\n          state={this.state}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Course;\n","import { createContext } from 'react';\n\nexport type DataContextType = {\n  data: any,\n  setData: any,\n  initData: any\n};\n\nexport const DataContext = createContext<DataContextType>({\n  data: {},\n  setData: () => {},\n  initData: () => {},\n});\n","import React, { useState } from 'react';\n\nimport { Skill } from './common';\n\ninterface Props {\n  skill: Skill,\n}\n\nconst SkillItem: React.FC<Props> = (props) => {\n  const {skill: propSkill} = props;\n  const [skill, setSkill] = useState(propSkill);\n\n  const gradeRate = () => (!(skill.need_skill_point) || (skill.need_skill_point == -1) ? 0 : (skill.grade_value / skill.need_skill_point).toFixed(2));\n\n  return (\n    <tr>\n      <td>{skill.id}</td>\n\n      <td>{skill.name}</td>\n      <td>{skill.description}</td>\n      <td>{skill.rarity}</td>\n      <td>{skill.need_skill_point}</td>\n      <td>{skill.grade_value}</td>\n      <td>{gradeRate()}</td>\n\n    </tr>\n  );\n};\n\nexport default SkillItem;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { DataContext } from '../../data-context';\n\nimport { Skill } from './common';\nimport SkillItem from './skill-item';\n\n// import skill_new from '../../db/skill/overview/general.json';\n\nimport '../../app.css';\n\ninterface IProps {\n}\n\nfunction Skills(props: IProps) {\n  const { data, setData, initData } = useContext(DataContext);\n\n  const [skills, setSkills] = useState(() => {\n    if (Object.keys(data.skill.detail).length == 0) {\n      initData('skill');\n    } else if (!('general' in data.skill.overview)) {\n      setData('skill', 'general');\n    }\n    return data.skill.overview.general;\n  });\n\n  const [runningStyle, setRunningStyle] = useState(['逃げ', '先行', '差し', '追込']);\n  const [phase, setPhase] = useState(['序盤', '中盤', '終盤']);\n  const [option, setOption] = useState({ phase: '全部', runningStyle: '全部' });\n\n  const filterButton = (objects: any, label: string) => {\n    const tmp = [<label>\n      <input type=\"radio\" name={label} value=\"all\" checked />\n      全部\n    </label>];\n    tmp.push(objects.map((value:any) => (\n      <label key={value}>\n        <input type=\"radio\" id={value} name={label} value={value} />\n        {value}\n      </label>\n    )));\n    tmp.push(<br />);\n    return tmp;\n  };\n\n  return (\n    <div className=\"content\">\n      <form>\n        {filterButton(phase, 'phase')}\n        {filterButton(runningStyle, 'runningStyle')}\n\n      </form>\n      <table>\n        <thead />\n        <tbody>\n          {\n          skills\n          && skills.map((skill:any) => <SkillItem key={skill.id} skill={skill} />)\n        }\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Skills;\n","import _ from 'lodash';\n\nimport { LocalizationData, LocalizationSubData } from './library/common';\n\nclass Localization {\n  default: {};\n\n  localizer: {\n    [key: string]: () => __WebpackModuleApi.RequireContext;\n  };\n\n  static getLocalizationJaJp() {\n    return require.context('./localization/ja_jp/', true, /\\.json$/);\n  }\n\n  static getLocalizationEnUs() {\n    return require.context('./localization/en_us/', true, /\\.json$/);\n  }\n\n  static getLocalizationZhTw() {\n    return require.context('./localization/zh_tw', true, /\\.json$/);\n  }\n\n  constructor() {\n    this.default = {};\n    this.localizer = {\n      'ja-jp': Localization.getLocalizationJaJp,\n      'en-us': Localization.getLocalizationEnUs,\n      'zh-tw': Localization.getLocalizationZhTw,\n    };\n    this.default = this.getLocalization('ja-jp');\n  }\n\n  getLocalization(locale: string): LocalizationData {\n    const files = this.localizer[locale]();\n    const fileJson: LocalizationSubData = {};\n    for (const fileKey of files.keys()) {\n      const structure = fileKey.split('.')[1].split('/');\n\n      let target: LocalizationSubData = fileJson;\n      for (let i = 1; i < structure.length; i += 1) {\n        if (!(structure[i] in fileJson)) {\n          target[structure[i]] = {};\n        }\n        target = target[structure[i]] as LocalizationSubData;\n      }\n      _.merge(target, files(fileKey));\n    }\n    return _.merge({}, this.default, fileJson) as LocalizationData;\n  }\n}\n\nexport default Localization;\n","import {\n  Layout, Menu, Select, Row, Col,\n} from 'antd';\nimport React, { Component } from 'react';\nimport {\n  Redirect, HashRouter as Router, Route, Link, Switch,\n} from 'react-router-dom';\n\nimport { LocalizationData } from './library/common';\nimport RelationGraph from './component/relation/graph';\nimport RelationQuery from './component/relation/query';\nimport Simulator from './component/simulator/simulator';\nimport Course from './component/course/course';\nimport Skill from './component/skill/index';\nimport Localization from './localization';\n\nimport { DataContext } from './data-context';\n\nimport 'antd/dist/antd.css';\nimport './app.css';\n\nconst { Header, Content, Footer } = Layout;\nconst { Option } = Select;\n\ninterface IProps {\n}\n\ninterface IState {\n  localization: LocalizationData,\n  data: { [key: string]: any },\n  setData: SetData,\n  initData: InitData,\n  availableData: string[],\n\n}\n\ntype SetData = (dataType: string, fileName: string) => void;\ntype InitData = (dataType: string) => void;\n\nclass App extends Component<IProps, IState> {\n  localization: Localization;\n\n  constructor(props: {}) {\n    super(props);\n    this.localization = new Localization();\n    this.state = {\n      localization: this.localization.getLocalization('ja-jp'),\n      data: {\n        skill: {\n          overview: {},\n          detail: {},\n        },\n      },\n      setData: this.setData,\n      initData: this.initData,\n      availableData: ['skill'],\n    };\n  }\n\n  setData: SetData = (dataType, fileName) => {\n    if (!this.state.availableData.includes(dataType)) {\n      console.log('error');\n    }\n    const tmp = this.state;\n    tmp.data[dataType].overview[fileName] = [];\n\n    const dataArray = require(`./db/${dataType}/overview/${fileName}.json`);\n    dataArray.forEach((d:any) => {\n      tmp.data[dataType].overview[fileName].push(d);\n    });\n    this.setState(tmp);\n  };\n\n  initData: InitData = (dataType) => {\n    if (!this.state.availableData.includes(dataType)) {\n      console.log(this.state.availableData);\n      console.log('error', dataType);\n    }\n\n    const tmp = this.state;\n    tmp.data[dataType].detail = require(`./db/${dataType}/detail.json`);\n\n    this.setState(tmp);\n  };\n\n  changeLocalization = (locale: string) => {\n    this.setState({\n      localization: this.localization.getLocalization(locale),\n    });\n  };\n\n  render() {\n    const {\n      localization, data, setData, initData,\n    } = this.state;\n\n    return (\n      <Router>\n        <Layout className=\"layout\">\n          <Header className=\"header\">\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n              <Menu.Item key=\"1\">\n                <Link to=\"/relation/graph\" className=\"link\">{localization.site['Relation Graph']}</Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n                <Link to=\"/relation/query\" className=\"link\">{localization.site['Relation Query']}</Link>\n              </Menu.Item>\n              <Menu.Item key=\"3\">\n                <Link to=\"/course\" className=\"link\">{localization.site.Course}</Link>\n              </Menu.Item>\n              <Menu.Item key=\"4\">\n                <Link to=\"/simulator\" className=\"link\">{localization.site.Simulator}</Link>\n              </Menu.Item>\n            </Menu>\n          </Header>\n          <Content className=\"tabs\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Redirect to=\"/relation/graph\" />\n              </Route>\n              <Route path=\"/relation/graph\" render={() => (<RelationGraph localization={localization} />)} />\n              <Route path=\"/relation/query\" render={() => (<RelationQuery localization={localization} />)} />\n              <Route path=\"/simulator\" render={() => (<Simulator localization={localization} />)} />\n              <Route path=\"/course\" render={() => (<Course localization={localization} />)} />\n\n              <DataContext.Provider value={{ data, setData, initData }}>\n                <Route path=\"/skill\" render={() => (<Skill />)} />\n              </DataContext.Provider>\n\n            </Switch>\n          </Content>\n          <Footer className=\"footer\" style={{ padding: '5px' }}>\n            <Row gutter={[8, 8]}>\n              <Col span={20} />\n              <Col span={2}>\n                <a className=\"github\" href=\"https://github.com/greydust/umamusume\" target=\"_blank\" rel=\"noreferrer\">\n                  <img src={`${process.env.PUBLIC_URL}/static/image/github.png`} height=\"30\" alt=\"GitHub\" />\n                  GitHub\n                </a>\n              </Col>\n              <Col span={2}>\n                <Select className=\"localizationSelector\" defaultValue=\"ja-jp\" onChange={this.changeLocalization}>\n                  <Option value=\"zh-tw\">繁體中文</Option>\n                  <Option value=\"ja-jp\">日本語</Option>\n                  <Option value=\"en-us\">English</Option>\n                </Select>\n              </Col>\n            </Row>\n          </Footer>\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}